{
    "openapi": "3.0.0",
    "servers": [{
        "url": "https://bulksign.com/webapi/restapi/"
    }],
    "info": {
        "version": "3.8",
        "title": "Bulksign REST API",
        "description": "Bulksign OpenAPI definition. For .NET/Core specifically, please use our [.NET SDK](https://www.nuget.org/packages/BulksignSdk). API code samples highlighting different integration scenarios are [on Gihub](https://github.com/bulksign/BulksignApiSamples)",
        "contact": {
            "email": "contact@bulksign.com"
        }
    },
    "tags": [{
            "name": "Envelope",
            "description": "Envelope specific APIs"
        },
        {
            "name": "Recipient",
            "description": "Recipient specific APIs"
        },
        {
            "name": "Documents Download",
            "description": "APIs to download completed OR partially signed documents"
        },
        {
            "name": "Draft",
            "description": "Draft specific APIs"
        },
        {
            "name": "Template",
            "description": "Template specific APIs"
        },
        {
            "name": "User",
            "description": "User specific APIs"
        },
        {
            "name": "Organization",
            "description": "Organization specific APIs. Can only be used by organization administrators"
        },
        {
            "name": "License",
            "description": "License specific APIs. Can only be used by organization administrators"
        },
        {
            "name": "Version",
            "description": "Version specific APIs"
        }
    ],

    "paths": {

        "/GetOrganizationUsers": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Gets the organization's users",
                "operationId": "GetOrganizationUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetOrganizationUsersResult"
                                }
                            }
                        }
                    }

                }
            }
        },
        "/GetLicense": {
            "post": {
                "tags": [
                    "License"
                ],
                "summary": "Gets license information. Can only be used by organization administrators",
                "operationId": "GetLicense",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLicenseResult"
                                }
                            }
                        }
                    }

                }
            }
        },
        "/PrepareSendEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Obtain a SendEnvelopeApiModel",
                "operationId": "PrepareSendEnvelope",
                "requestBody": {
                    "required": true,
                    "description": "Input files",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FileInput"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvelopeApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/PrepareSendEnvelopeBase64": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Obtain a SendEnvelopeApiModel",
                "operationId": "PrepareSendEnvelopeBase64",
                "requestBody": {
                    "required": true,
                    "description": "Input files",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FileInputBase64"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvelopeApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },


        "/SendEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Sends a envelope for signing",
                "operationId": "SendEnvelope",
                "requestBody": {
                    "required": true,
                    "description": "SendEnvelope input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvelopeApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendEnvelopeResultApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SendBulkEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Sends a bulk envelope for signing",
                "operationId": "SendBulkEnvelope",
                "requestBody": {
                    "required": true,
                    "description": "SendBulkEnvelope input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvelopeApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendEnvelopeResultApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SendReminder": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Sends a email reminder for the current signer(s) of the envelope",
                "operationId": "SendReminder",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SendEnvelopeFromDraft": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Send a envelope to signing from a existing draft",
                "operationId": "SendEnvelopeFromDraft",
                "parameters": [{
                    "name": "draftId",
                    "in": "query",
                    "description": "The id of the draft",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SendEnvelopeFromTemplate": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Send a envelope to signing from a existing template",
                "operationId": "SendEnvelopeFromTemplate",
                "requestBody": {
                    "required": true,
                    "description": "The template model which allows replacing template recipients",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvelopeFromTemplateApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/DeleteEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Delete a existing envelope",
                "operationId": "DeleteEnvelope",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CancelEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Cancel a envelope which is in progress",
                "operationId": "CancelEnvelope",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/RestartEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Restarts a expired envelope",
                "operationId": "RestartEnvelope",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetEnvelopeDetails": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Get envelope details",
                "operationId": "GetEnvelopeDetails",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEnvelopeDetailsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetEnvelopesByStatus": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Gets an array of envelopes which have the specified status",
                "operationId": "GetEnvelopeByStatus",
                "parameters": [{
                    "name": "status",
                    "in": "query",
                    "description": "The status  : 1 - InProgress, 2 - Completed, 3 - Canceled, 4 - Expired",
                    "required": true,
                    "schema": {
                        "type": "number"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetItemsArrayResult"
                                    }

                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetEnvelopeStatus": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Gets the status of the specific envelope",
                "operationId": "GetEnvelopeStatus",
                "parameters": [{
                    "name": "id",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetEnvelopesToSign": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Gets an array of envelopes that API caller has to sign",
                "operationId": "GetEnvelopesToSign",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetEnvelopesToSignResult"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetCompletedFormFields": {
            "post": {
                "tags": [
                    "Documents Download"
                ],
                "summary": "Get the values of the form fields filled by the envelope signers",
                "operationId": "GetCompletedFormFields",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "Id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],

                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCompletedFormFieldsResult"
                                }
                            }
                        }

                    }
                }
            }
        },

        "/DownloadEnvelopeIncompleteDocuments": {
            "post": {
                "tags": [
                    "Documents Download"
                ],
                "summary": "Returns a zip file with partially signed documents. If nobody signed the document yet, the envelope original files will be returned",
                "operationId": "DownloadEnvelopeIncompleteDocuments",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "Id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DownloadEnvelopeIncompleteDocumentsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/DownloadEnvelopeCompletedDocuments": {
            "post": {
                "tags": [
                    "Documents Download"
                ],
                "summary": "Returns a zip file with finished documents and the audit trail",
                "operationId": "DownloadEnvelopeCompletedDocuments",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "Id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DownloadEnvelopeCompletedDocumentsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/DeleteEnvelopeRecipient": {
            "post": {
                "tags": [
                    "Recipient"
                ],
                "summary": "Model from deleting a recipient from a envelope",
                "operationId": "DeleteRecipient",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteEnvelopeRecipientApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/ReplaceEnvelopeRecipient": {
            "post": {
                "tags": [
                    "Recipient"
                ],
                "summary": "Replaces a recipient from a envelope",
                "operationId": "ReplaceEnvelopeRecipient",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/ReplaceEnvelopeRecipientApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddUserAutomaticSigningProfile": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add a new profile for automatic signatures",
                "operationId": "AddUserAutomaticSigningProfile",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/AutomaticSigningProfileApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetSignatureImprints": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get the list of signature imprints defined per organization ",
                "operationId": "GetSignatureImprints",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BulksignResultStringArray"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },


        "/AddOrganizationAutomaticSigningProfile": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Add a new organization profile for automatic signatures",
                "operationId": "AddOrganizationAutomaticSigningProfile",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/AutomaticSigningProfileApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },


        "/GetUserAutomaticSigningProfiles": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get the list of user automatic signing profiles ",
                "operationId": "GetUserAutomaticSigningProfiles",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json:": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutomaticSigningProfileResultApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetOrganizationAutomaticSigningProfiles": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get the list of organization automatic signing profiles ",
                "operationId": "GetOrganizationAutomaticSigningProfiles",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutomaticSigningProfileResultApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddContact": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add a new contact",
                "operationId": "AddContact",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/NewContactApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetContacts": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Gets the list of contacts",
                "operationId": "GetContacts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetContactsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetTemplatesCount": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Gets the number of templates available for user including shared templates",
                "operationId": "GetTemplatesCount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResultNumeric"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetTemplates": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Gets the list of templates available for user including shared templates",
                "operationId": "GetTemplates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTemplatesResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetTemplateDetails": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Gets the list of templates available for user including shared templates",
                "operationId": "GetTemplateDetails",
                "parameters": [{
                    "name": "templateId",
                    "in": "query",
                    "description": "The id of the template",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTemplateDetailsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateTemplate": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Creates a new template",
                "operationId": "CreateTemplate",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateBulkTemplate": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Creates a new template with bulk recipients",
                "operationId": "CreateBulkTemplate",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/DeleteTemplate": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Deletes the specified template",
                "operationId": "DeleteTemplate",
                "parameters": [{
                    "name": "templateId",
                    "in": "query",
                    "description": "Id of the template to delete",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/DeleteDraft": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Deletes the specified draft",
                "operationId": "DeleteDraft",
                "parameters": [{
                    "name": "draftId",
                    "in": "query",
                    "description": "Id of the draft to deleted",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateDraft": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Creates a new draft",
                "operationId": "CreateDraft",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateDraftFromFile": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Creates a new draft from file",
                "operationId": "CreateDraftFromFile",
                "parameters": [{
                    "name": "fileName",
                    "in": "query",
                    "description": "The name of the file including extension",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/octet-stream:": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateDraftFromFileBase64": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Creates a new draft from file",
                "operationId": "CreateDraftFromFileBase64",
                "parameters": [{
                    "name": "fileName",
                    "in": "query",
                    "description": "The name of the file including extension",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateBulkDraft": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Creates a new bulk draft",
                "operationId": "CreateBulkDraft",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetDrafts": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Gets the list of user drafts",
                "operationId": "GetDrafts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetItemsArrayResult"
                                }
                            }
                        }
                    }

                }
            }
        },

        "/GetDraftDetails": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Gets the details of the specified draft",
                "operationId": "GetDraftDetails",
                "parameters": [{
                    "name": "draftId",
                    "in": "query",
                    "description": "The id of the draft",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDraftDetailsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetDraftsCount": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Gets the number of drafts available for user",
                "operationId": "GetDraftsCount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResultNumeric"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateShareTeam": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Creates a team where envelopes are shared between all members of the team",
                "operationId": "CreateShareTeam",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamShareApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateHierarchicalTeam": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Creates a team where envelopes are shared between all members of the team",
                "operationId": "CreateHierarchicalTeam",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamHierarchicalApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AnalyzeFileInput": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Analyze the specified PDF file, stores the file and returns information about form fields",
                "operationId": "AnalyzeFileInput",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/octet-stream:": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnalyzedFileResultApiModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AnalyzeFile": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Analyze the specified PDF file, stores the file and returns information about form fields",
                "operationId": "AnalyzeFile",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/FileInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnalyzedFileResultApiModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AnalyzeFileBase64": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Analyze the specified PDF file and returns information about form fields",
                "operationId": "AnalyzeFileBase64",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/FileInputBase64"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnalyzedFileResultApiModel"
                                    }
                                }
                            }
                        }
                    }
                }

            }
        },

        "/UpdateOrganizationSettings": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Updates the organization settings. Requires administrator rights",
                "operationId": "UpdateOrganizationSettings",
                "requestBody": {
                    "required": true,
                    "description": "Input model for UpdateOrganizationSettings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUpdateSettingsApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },


        "/InviteUserToOrganization": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Invite the user to your organization using name and email",
                "operationId": "InviteUserToOrganization",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInvitationApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddUserToOrganization": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add a new user to your organization using full user data. Can only be used by organization administrators",
                "operationId": "AddUserToOrganization",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/NewUserApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GetVersion": {
            "post": {
                "tags": [
                    "Version"
                ],
                "summary": "Returns the version number",
                "operationId": "GetVersion",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Version"
                ],
                "summary": "Returns the version number",
                "operationId": "GetVersionGet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/UpdateDraftSettings": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Updates the draft settings",
                "operationId": "UpdateDraftSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDraftApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddDocumentsRecipientsToDraft": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Adds new recipients and/or documents to a draft",
                "operationId": "AddDocumentsRecipientsToDraft",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddDocumentsOrRecipientsToDraftApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddDocumentsRecipientsToTemplate": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Adds new recipients and/or documents to a template",
                "operationId": "AddDocumentsRecipientsToTemplate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddDocumentsOrRecipientsToDraftApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/UpdateTemplateSettings": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Updates the template settings",
                "operationId": "UpdateDraftSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTemplateApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/UpdateUserSettings": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Updates the user settings",
                "operationId": "UpdateUserSettings",
                "requestBody": {
                    "required": true,
                    "description": "Input model for UpdateUserSettings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateSettingsApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulksignResult"
                                }
                            }
                        }
                    }
                }
            }
        }
    },

    "components": {
        "schemas": {


            "AddDocumentsOrRecipientsToDraftApiModel": {
                "type": "object",
                "properties": {
                    "DraftId": {
                        "description": "Draft identifier",
                        "type": "string"
                    },
                    "Documents": {
                        "description": "Documents which will be added to the draft",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentApiModel"
                        }
                    },
                    "Recipients": {
                        "description": "Recipients which will be added to the draft",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientApiModel"
                        }
                    }
                }
            },

            "AddDocumentsOrRecipientsToTemplateApiModel": {
                "type": "object",
                "properties": {
                    "TemplateId": {
                        "description": "Template identifier",
                        "type": "string"
                    },
                    "Documents": {
                        "description": "Documents which will be added to the template",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentApiModel"
                        }
                    },
                    "Recipients": {
                        "description": "Recipients which will be added to the template",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientApiModel"
                        }
                    }
                }
            },

            "BaseUpdateApiModel": {
                "type": "object",
                "properties": {

                    "EmailSubject": {
                        "description": "Draft email subject",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 300
                    },
                    "EmailMessage": {
                        "description": "Draft email body",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 300
                    },
                    "Language": {
                        "description": "Language for email notifications",
                        "type": "string"
                    },
                    "Metadata": {
                        "description": "Metadata for the envelope/draft/template",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4000
                    },
                    "DaysUntilExpire": {
                        "description": "Sets the expiration day for envelope in days",
                        "type": "number"
                    },

                    "ReminderOptions": {
                        "description": "Enable reminders and set the reminder options",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/ReminderOptionsApiModel"
                    },
                    "Name": {
                        "description": "Set the name to identify the envelope/draft/template",
                        "type": "string"
                    },
                    "DisableSignersShouldReceiveFinishedDocument": {
                        "description": "Set to true to disable sending completed documents to CC recipients",
                        "type": "boolean"
                    },
                    "OverwriteCallbackUrls": {
                        "description": "Overwrite the envelope callback URLs. If this is not set, the default configured UI values will be used",
                        "type": "object",
                        "$ref": "#/components/schemas/CallbackApiModel"
                    },
                    "OverwriteSignSettings": {
                        "description": "Overwrite the signing settings",
                        "type": "object",
                        "$ref": "#/components/schemas/SignSettingsApiModel"
                    },
                    "OverwriteSignatureDisclosure": {
                        "description": "Overwrite the signature disclosure text. If this is empty, the default UI configured value will be used",
                        "type": "string"
                    },
                    "AllowRecipientDelegation": {
                        "description": "Set to true to enable recipient delegation",
                        "type": "boolean"
                    },
                    "CertifyDocumentsBeforeSending": {
                        "description": "Flag to certify the PDF documents before sending them to signing",
                        "type": "boolean"
                    },
                    "PreventFormFieldEditOnEnvelopeCompletion": {
                        "description": "If enabled, the form fields in the PDF documents will be marked as read only to prevent editing on envelope completion",
                        "type": "boolean"
                    },
                    "EnableBatchSign": {
                        "description": "Flag to enable support for batch signing. Batch signing allows the signer to sign multiple signature fields with a single click",
                        "type": "boolean"
                    },

                    "DisableSignerEmailNotifications": {
                        "description": "Flag to enable support for batch signing. Batch signing allows the signer to sign multiple signature fields with a single click",
                        "type": "boolean"
                    },

                    "EnableDocumentTimestamp": {
                        "description": "Flag to enable support for batch signing. Batch signing allows the signer to sign multiple signature fields with a single click",
                        "type": "boolean"
                    },

                    "SerialEnvelopeDocumentTimestamp": {
                        "description": "Set the type of timestamping for serial envelope. To be set only if EnableDocumentTimestamp is enabled and the the of envelope is serial",
                        "type": "object",
                        "$ref": "#/components/schemas/SerialEnvelopeDocumentTimestampTypeApi"
                    }

                }
            },



            "SerialEnvelopeDocumentTimestampTypeApi": {
                "description": "Specifies the type of timestamping to be done for serial envelopes  : 1 - Recipient, 2 - Envelope",
                "type": "number",
                "enum": [
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                        "numericValue": "1",
                        "identifier": "Recipient"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "Envelope"
                    }
                ],
                "x-ms-enum": []
            },


            "UpdateTemplateApiModel": {
                "description": "Type which describes the template update settings. Everything is optional, you should only sent the setting values that need to be updated",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BaseUpdateApiModel",
                    "type": "object"
                }],
                "properties": {
                    "TemplateId": {
                        "description": "The identifier of the template which will be updated",
                        "type": "string"
                    },

                    "IsSharedTemplate": {
                        "description": "Flag which determines if the template is shared with the organization users",
                        "type": "boolean"
                    }
                }
            },

            "UpdateDraftApiModel": {
                "description": "Type which describes the draft update settings. Everything is optional, you should only sent the setting values that need to be updated",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BaseUpdateApiModel",
                    "type": "object"
                }],
                "properties": {
                    "DraftId": {
                        "description": "The identifier of the draft which will be updated",
                        "type": "string"
                    }
                }
            },

            "UserUpdateSettingsApiModel": {
                "description": "Type which describes user settings. Everything is optional, you should only sent the setting values that need to be updated",
                "type": "object",
                "properties": {
                    "FirstName": {
                        "description": "The user's first name",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "The user's last name",
                        "type": "string"
                    },
                    "TimezoneIdentifier": {
                        "description": "The timezone identifier",
                        "type": "string"
                    },
                    "UserInterfaceLanguage": {
                        "description": "The user interface language. Call /GetUserInterfaceLanguages to retrieve all supported languages",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The user's phone number",
                        "type": "string"
                    },
                    "JobTitle": {
                        "description": "The user's job title",
                        "type": "string"
                    },
                    "DefaultDraftLanguage": {
                        "description": "The default language for new drafts",
                        "type": "string"
                    },
                    "DefaultSignatureType": {
                        "description": "The default signature type for this user",
                        "type": "string"
                    },
                    "DefaultForSendFinishedDocumentsToAllSigners": {
                        "description": "Default value for sending finished documents to signers for new drafts",
                        "type": "boolean"
                    },
                    "DefaultForEnableBatchSigning": {
                        "description": "Default value for enabling batch signing for new drafts",
                        "type": "boolean"
                    },
                    "DefaultForAllowRecipientDelegation": {
                        "description": "Default value for recipient delegation used for new drafts",
                        "type": "boolean"
                    },
                    "DefaultForPreventFormFieldEditOnEnvelopeCompletion": {
                        "description": "Default value for preventing form field editing on completion used for new drafts",
                        "type": "boolean"
                    },
                    "NotificationRecipientOpenedSignStep": {
                        "description": "Enable/disable notifications for recipient opening the SignStep",
                        "type": "boolean"
                    },
                    "NotificationRecipientSigned": {
                        "description": "Enable/disable notifications for recipient signing and finishing a SignStep",
                        "type": "boolean"
                    },
                    "NotificationEnvelopeCompleted": {
                        "description": "Enable/disable notifications for a envelope being completed",
                        "type": "boolean"
                    },
                    "NotificationRecipientRejected": {
                        "description": "Enable/disable notifications for recipient rejecting to sign a document",
                        "type": "boolean"
                    },
                    "SignatureImageBase64": {
                        "description": "The user's signature image sent as Base64 encoded string",
                        "type": "string"
                    },
                    "UserPictureBase64": {
                        "description": "The user's image sent as a Base64 encoded string",
                        "type": "string"
                    }
                }
            },

            "BaseDocumentApiInput": {
                "description": "",
                "type": "object",
                "properties": {

                    "EmailSubject": {
                        "description": "Envelope email subject. If left empty, will be imported from settings",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 300,
                        "required": false
                    },
                    "EmailMessage": {
                        "description": "Envelope email body. If left empty, will be imported from organization settings",
                        "type": "string",
                        "required": false
                    },
                    "Language": {
                        "description": "Language for email notifications. If left empty, the default language setting will be used",
                        "type": "string",
                        "required": false
                    },
                    "Metadata": {
                        "description": "Metadata for the envelope/draft/template",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4000,
                        "required": false
                    },
                    "DaysUntilExpire": {
                        "description": "Sets the expiration day for envelope in days. If not set, default value will be used",
                        "type": "number",
                        "required": false
                    },
                    "Documents": {
                        "description": "Set the PDF documents which will be signed",
                        "type": "object",
                        "required": true,
                        "$ref": "#/components/schemas/DocumentApiModel"
                    },
                    "Recipients": {
                        "description": "Set the recipients",
                        "type": "object",
                        "required": true,
                        "$ref": "#/components/schemas/RecipientApiModel"
                    },
                    "ReminderOptions": {
                        "description": "Enable reminders and set the reminder options",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/ReminderOptionsApiModel"
                    },
                    "Name": {
                        "description": "Set the name to identify the envelope/draft/template",
                        "type": "string",
                        "required": true
                    },
                    "DisableSignersShouldReceiveFinishedDocument": {
                        "description": "Set to true to disable sending finished documents to CC recipients",
                        "type": "boolean",
                        "required": false
                    },
                    "OverwriteCallbackUrls": {
                        "description": "Overwrite the envelope callback URLs. If this is not set, the default configured UI values will be used",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/CallbackApiModel"
                    },
                    "OverwriteSignSettings": {
                        "description": "Overwrite the signing settings",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/SignSettingsApiModel"
                    },
                    "OverwriteSignatureDisclosure": {
                        "description": "Overwrite the signature disclosure text. If this is empty, the default UI configured value will be used",
                        "type": "string",
                        "required": false
                    },
                    "AllowRecipientDelegation": {
                        "description": "Set to true to enable recipient delegation",
                        "type": "boolean",
                        "required": false
                    },
                    "CertifyDocumentsBeforeSending": {
                        "description": "Flag to certify the PDF documents before sending them to signing",
                        "type": "boolean",
                        "required": false
                    },
                    "PreventFormFieldEditOnEnvelopeCompletion": {
                        "description": "If enabled, the form fields in the PDF documents will be marked as read only to prevent editing on envelope completion",
                        "type": "boolean",
                        "required": "false"
                    },
                    "EnableBatchSign": {
                        "description": "Flag to enable support for batch signing. Batch signing allows the signer to sign multiple signature fields with a single click",
                        "type": "boolean",
                        "required": "false"
                    },
                    "FileAccessMode": {
                        "description": "Set file access mode",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/FileAccessModeApi"
                    },
                    "CustomFileAccess": {
                        "description": "Set the custom file access mode",
                        "type": "array",
                        "required": false,
                        "items": {
                            "$ref": "#/components/schemas/FileAccessApiModel"
                        }
                    }
                }
            },

            "UpdateDraftMetadataApiModel": {
                "description": "UpdateDraftMetadataApiModel type definition",
                "type": "object",
                "properties": {
                    "DraftId": {
                        "description": "The id of the draft",
                        "type": "string",
                        "required": true
                    },
                    "Metadata": {
                        "description": "The new metadata value",
                        "type": "string",
                        "required": true
                    }
                }
            },

            "ItemResultApiModel": {
                "description": "ItemResultApiModel type definition",
                "type": "object",
                "properties": {
                    "Id": {
                        "description": "The id of the envelope/draft/template",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the envelope/draft/template",
                        "type": "string"
                    },
                    "LastUpdatedDateUTC": {
                        "description": "The last update date for draft/envelope/template, timestamp is UTC",
                        "type": "string"
                    }
                }
            },
            "EnvelopeFromTemplateApiModel": {
                "description": "EnvelopeFromTemplateApiModel type definition",
                "type": "object",
                "properties": {

                    "TemplateId": {
                        "description": "The id of the template",
                        "type": "string",
                        "required": true
                    },
                    "ReplaceRecipients": {
                        "description": "The recipients to replace",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateReplaceRecipientApiModel"
                        }
                    },
                    "ReplaceFormFields": {
                        "description": "The form fields ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateReplaceFormFieldsApiModel"
                        }
                    }
                }
            },
            "TemplateReplaceFormFieldsApiModel": {
                "description": "TemplateReplaceFormFieldsApiModel type definition",
                "type": "object",
                "properties": {

                    "FindDocumentByIndex": {
                        "description": "The index of the document",
                        "type": "number",
                        "required": "true"
                    },
                    "FindDocumentByName": {
                        "description": "The name of the document",
                        "type": "string",
                        "required": "true"
                    },
                    "FormFieldValues": {
                        "description": "Form field values",
                        "type": "array",
                        "required": true,
                        "items": {
                            "$ref": "#/components/schemas/OverwriteFieldValueApiModel"
                        }
                    }
                }
            },
            "EnvelopeToSignResultApiModel": {
                "description": "EnvelopeToSignResultApiModel type definition",
                "type": "object",
                "properties": {
                    "AccessCode": {
                        "description": "The access code for the document",
                        "type": "string"
                    },
                    "EnvelopeName": {
                        "description": "The name of the envelope",
                        "type": "string"
                    },
                    "SenderName": {
                        "description": "The name of the envelope sender",
                        "type": "string"
                    }
                }
            },
            "NewUserApiModel": {
                "description": "NewUserApiModel type definition",
                "type": "object",
                "properties": {
                    "FirstName": {
                        "description": "The user first name",
                        "type": "string",
                        "required": true
                    },
                    "LastName": {
                        "description": "The user last name",
                        "type": "string",
                        "required": true
                    },
                    "Email": {
                        "description": "The user email address",
                        "type": "string",
                        "required": true
                    },
                    "IsAdministrator": {
                        "description": "Flag to determine if the new user will be a organization administrator",
                        "type": "boolean",
                        "default": "false",
                        "required": true
                    },
                    "JobTitle": {
                        "description": "The user job title",
                        "type": "string",
                        "default": ""
                    },
                    "PhoneNumber": {
                        "description": "The user phone number",
                        "type": "string",
                        "default": "",
                        "required": true
                    },
                    "UILanguage": {
                        "description": "The localization identifier for the user UI language, format is ISO 639-1",
                        "type": "string",
                        "default": "en-US"
                    },
                    "DefaultDraftLanguage": {
                        "description": "The localization identifier used by default for the drafts",
                        "type": "string",
                        "default": "en-US"
                    },
                    "NotificationRecipientSigned": {
                        "description": "Flag to enable the recipient signed email notification",
                        "type": "boolean",
                        "default": "false"
                    },
                    "NotificationRecipientOpenedEnvelope": {
                        "description": "Flag to enable the opened envelope email notification",
                        "type": "boolean",
                        "default": "false"
                    },
                    "NotificationEnvelopeCompleted": {
                        "description": "Flag to enable the envelope completed email notification",
                        "type": "boolean",
                        "default": "false"
                    },
                    "NotificationRecipientRejected": {
                        "description": "Flag to enable the recipient rejected email notification",
                        "type": "boolean",
                        "default": false
                    },
                    "DateTimeFormatId": {
                        "description": "The identifier for the date time format used by the user",
                        "type": "number",
                        "default": "1"
                    },
                    "TimeZoneId": {
                        "description": "The identifier for the time zone format used by the user",
                        "type": "string",
                        "default": "UTC"
                    },
                    "SignatureImage": {
                        "description": "A BASE64 encoded image in JPEG format that will be used as the user's signature image",
                        "type": "string",
                        "default": ""
                    },
                    "Picture": {
                        "description": "A BASE64 encoded image in JPEG format that will be used as the user's image",
                        "type": "string",
                        "default": ""
                    }
                }
            },


            "UserInvitationApiModel": {
                "description": "Type description for UserInvitation model",
                "type": "object",
                "properties": {
                    "FirstName": {
                        "description": "The user's first name",
                        "type": "string",
                        "required": "true",
                        "example": "John"
                    },
                    "LastName": {
                        "description": "The user's last name",
                        "type": "string",
                        "required": "true",
                        "example": "Fonesca"
                    },
                    "Email": {
                        "description": "The user's email address",
                        "type": "string",
                        "required": "true",
                        "example": "test@test.com"
                    },
                    "IsAdministrator": {
                        "description": "Flag to determine if the new user will be a organization administrator",
                        "type": "boolean",
                        "required": "true",
                        "example": "true"
                    }
                }
            },

            "RecipientResultApiModel": {
                "description": "Type description for BulksignRecipientResult",
                "type": "object",
                "properties": {

                    "Email": {
                        "description": "The recipient's email",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The recipient's name",
                        "type": "string"
                    },
                    "Index": {
                        "description": "The recipient's name",
                        "type": "number"
                    },
                    "PersonalMessage": {
                        "description": "The personal message",
                        "type": "string"
                    },
                    "AccessCode": {
                        "description": "The access code of the recipient",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The current status of the recipient",
                        "$ref": "#/components/schemas/RecipientStatusApi"
                    },
                    "RecipientType": {
                        "description": "The recipient types",
                        "$ref": "#/components/schemas/RecipientTypeApi"
                    },
                    "RecipientAuthenticationMethods": {
                        "description": "The recipient authentication methods",
                        "$ref": "#/components/schemas/RecipientAuthenticationApiModel"
                    },
                    "HasBeenDelegated": {
                        "description": "Flag which indicates if the recipient has been delegated",
                        "type": "boolean"
                    },
                    "RejectionMessage": {
                        "description": "The rejection message of the recipient (only when the SignStep is rejected)",
                        "type": "string"
                    },

                    "SigningUrl": {
                        "description": "The url to which the user should be redirected to sign",
                        "type": "string"
                    }

                }
            },

            "DocumentResultApiModel": {
                "description": "Type description for BulksignDocumentResult",
                "type": "object",
                "properties": {

                    "Filename": {
                        "description": "Name of the file",
                        "type": "string"
                    },
                    "Index": {
                        "description": "Index of the file",
                        "type": "string"
                    }
                }
            },

            "EnvelopeDetailsResultApiModel": {
                "description": "Model for envelope detail result",
                "type": "object",
                "properties": {
                    "Documents": {
                        "description": "The envelope documents",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentResultApiModel"
                        }
                    },
                    "Recipients": {
                        "description": "The envelope recipients",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientResultApiModel"
                        }
                    },
                    "Status": {
                        "description": "The status of the envelope",
                        "$ref": "#/components/schemas/EnvelopeStatusTypeApi"
                    },
                    "SentDateUTC": {
                        "description": "The date at which the envelope was sent for signing",
                        "type": "string"
                    },
                    "SentFormattedDateUTC": {
                        "description": "The date at which the envelope was sent for signing in ISO 8601 format",
                        "type": "string"
                    },
                    "ExpirationDateUTC": {
                        "description": "The expiration date of the envelope",
                        "type": "string"
                    },
                    "ExpirationFormattedDateUTC": {
                        "description": "The expiration date of the envelope in ISO 8601 format",
                        "type": "string"
                    },
                    "LastModifiedDateUTC": {
                        "description": "The last modification date of the envelope",
                        "type": "string"
                    },
                    "LastModifiedFormattedDateUTC": {
                        "description": "The last modification date of the envelope in ISO 8601 format",
                        "type": "string"
                    },
                    "EnvelopeId": {
                        "description": "The id of the envelope",
                        "type": "string"
                    },
                    "IsBulk": {
                        "description": "Flag which shows if this is a envelope with bulk recipients",
                        "type": "boolean"
                    },
                    "ReminderOptions": {
                        "description": "Enable reminders and set specific options",
                        "$ref": "#/components/schemas/ReminderOptionsApiModel"
                    },
                    "Name": {
                        "description": "The name of the envelope/draft/template",
                        "type": "string"
                    },
                    "ClientRedirectUrl": {
                        "description": "The URL to redirect to after the signer finishes the document",
                        "type": "string"
                    },
                    "NotificationLanguage": {
                        "description": "Language for email notifications.If left empty, the default language set by user will be used",
                        "type": "string"
                    },
                    "SignersShouldReceiveFinishedDocument": {
                        "description": "Flag which shows if the signers will also received the finished documents",
                        "type": "boolean"
                    },
                    "CertifyDocuments": {
                        "description": "Flag which shows if the documents were certified before sending",
                        "type": "boolean"
                    },
                    "Metadata": {
                        "description": "The metadata for envelope/draft/template",
                        "type": "string"
                    }
                }
            },



            "EnvelopeApiModel": {
                "description": "EnvelopeApiModel definition",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BaseDocumentApiInput",
                    "type": "object"
                }],
                "properties": {
                    "DisableNotifications": {
                        "description": "Set this to true to disable ALL email notifications for the envelope recipients",
                        "type": "boolean",
                        "required": "false"
                    }
                }
            },

            "SendEnvelopeResultApiModel": {
                "description": "Return type description for SendEnvelope",
                "type": "object",
                "properties": {
                    "EnvelopeId": {
                        "description": "The envelope identifier",
                        "type": "string"
                    },
                    "AccessCodes": {
                        "description": "The envelope identifier",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientAccessCodeApiModel"
                        }
                    }
                }
            },
            "RecipientAccessCodeApiModel": {
                "description": "Access code for recipient",
                "type": "object",
                "properties": {
                    "RecipientName": {
                        "description": "Name of the recipient",
                        "type": "string"
                    },
                    "AccessCode": {
                        "description": "The access code for the recipient",
                        "type": "string"
                    }
                }
            },

            "DraftApiModel": {
                "description": "Create new draft type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BaseDocumentApiInput",
                    "type": "object"
                }],
                "properties": {
                    "EnableEditIncognitoMode": {
                        "description": "Set to true to allow editing the draft in incognito mode, see https://bulksign.com/docs/iframe.htm for example",
                        "type": "boolean",
                        "required": "false"
                    }
                }
            },
            "TemplateApiModel": {
                "description": "Create new template type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BaseDocumentApiInput",
                    "type": "object"
                }],
                "properties": {
                    "IsSharedTemplate": {
                        "description": "Boolean flag to set if the template is shared or not",
                        "type": "boolean",
                        "required": "false"
                    }
                }
            },
            "DocumentApiModel": {
                "description": "Defines a document to sign",
                "type": "object",
                "properties": {
                    "FileContentByteArray": {
                        "description": "Type describes a binary file content",
                        "type": "object",
                        "$ref": "#/components/schemas/FileContentByteArray"
                    },
                    "FileContentBase64String": {
                        "description": "Type describes a Base64 encoded file",
                        "type": "object",
                        "$ref": "#/components/schemas/FileContentBase64String"
                    },
                    "FileIdentifier": {
                        "description": "Type describes a file identifier",
                        "type": "object",
                        "$ref": "#/components/schemas/FileIdentifier"
                    },
                    "FileNetworkShare": {
                        "description": "Type describes a network share file path. Can ONLY be used with Bulksign OnPremise version",
                        "type": "object",
                        "$ref": "#/components/schemas/FileNetworkShare"
                    },
                    "Index": {
                        "description": "The index of the recipient. In serial signing mode this represents the position at which he signs the document",
                        "type": "number",
                        "required": true
                    },
                    "FileName": {
                        "description": "The name of the file",
                        "type": "string",
                        "required": "true"
                    },
                    "FieldAssignments": {
                        "description": "Assign form fields to recipients",
                        "type": "array",
                        "required": true,
                        "items": {
                            "$ref": "#/components/schemas/AssignmentApiModel"
                        }
                    },
                    "NewSignatures": {
                        "description": "Add new signature fields",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/NewSignatureApiModel"
                    },
                    "NewAnnotations": {
                        "description": "Add new annotations ",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/NewAnnotationApiModel"
                    },
                    "NewTextBoxes": {
                        "description": "Add new text boxes to document ",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/NewTextBoxApiModel"
                    },
                    "NewComboBoxes": {
                        "description": "Add new text boxes to document ",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/NewComboBoxApiModel"
                    },
                    "NewCheckBoxes": {
                        "description": "Add new checkboxes to document ",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/NewCheckBoxApiModel"
                    },
                    "OverwriteValues": {
                        "description": "Set values for form fields",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/OverwriteFieldValueApiModel"
                    }
                }
            },

            "FileIdentifier": {
                "description": "Type which describes a file identifier obtained from AnalyzeFile request",
                "type": "object",
                "properties": {
                    "Identifier": {
                        "description": "The file identifier",
                        "type": "string",
                        "required": true
                    }
                }
            },

            "FileNetworkShare": {
                "description": "Type which describes a internal network share file. This can ONLY be used with Bulksign OnPremise version",
                "type": "object",
                "properties": {
                    "Path": {
                        "description": "The full path of the shared file",
                        "type": "string",
                        "required": "true"
                    }
                }
            },


            "FileContentByteArray": {
                "description": "Type which describes a binary file content",
                "type": "object",
                "properties": {
                    "ContentBytes": {
                        "description": "The file's content",
                        "type": "string",
                        "format": "binary",
                        "required": true
                    }
                }
            },


            "FileContentBase64String": {
                "description": "Type which describes a BASE64 encoded file content",
                "type": "object",
                "properties": {
                    "FileContent": {
                        "description": "The BASE64 encoded file content",
                        "type": "string",
                        "required": true
                    }
                }
            },


            "AnalyzedFileResultApiModel": {
                "description": "AnalyzeFile return type",
                "type": "object",
                "properties": {
                    "FileIdentifier": {
                        "description": "Identifier for stored file",
                        "type": "string"
                    },
                    "Fields": {
                        "description": "Parsed fields ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormFieldResultApiModel"
                        }
                    }
                }
            },

            "NewTextBoxApiModel": {
                "description": "Type which describes a new TextBox which will be added to the document",
                "type": "object",
                "properties": {
                    "Height": {
                        "description": "The height of the TextBox field",
                        "type": "number",
                        "required": true
                    },
                    "Width": {
                        "description": "The width of the TextBox field",
                        "type": "number",
                        "required": true
                    },
                    "Top": {
                        "description": "Top position for TextBox field",
                        "type": "number",
                        "required": true
                    },
                    "Left": {
                        "description": "Left position for TextBox field",
                        "type": "number",
                        "required": true
                    },
                    "PageIndex": {
                        "description": "Index of the page where TextBox field will be applied",
                        "type": "number",
                        "required": true
                    },
                    "AssignedToRecipientEmail": {
                        "description": "The recipient identifier to which this new TextBox field will be assigned to",
                        "type": "string",
                        "required": true
                    },
                    "Text": {
                        "description": "Text which will be shown in the TextBox field",
                        "type": "string"
                    },
                    "Id": {
                        "description": "The id of the field",
                        "type": "string",
                        "required": true
                    },
                    "IsRequired": {
                        "description": "Flag which determines if form filling the TextBox is required",
                        "type": "boolean"
                    }
                }
            },

            "NewComboBoxApiModel": {
                "description": "Type which describes a new ComboBox which will be added to the document",
                "type": "object",
                "properties": {
                    "Height": {
                        "description": "The height of the ComboBox field",
                        "type": "number",
                        "required": true
                    },
                    "Width": {
                        "description": "The width of the ComboBox field",
                        "type": "number",
                        "required": true
                    },
                    "Top": {
                        "description": "Top position for ComboBox field",
                        "type": "number",
                        "required": true
                    },
                    "Left": {
                        "description": "Left position for ComboBox field",
                        "type": "number",
                        "required": true
                    },
                    "PageIndex": {
                        "description": "Index of the page where ComboBox field will be applied",
                        "type": "number",
                        "required": true
                    },
                    "AssignedToRecipientEmail": {
                        "description": "The recipient identifier to which this new ComboBox field will be assigned to",
                        "type": "string",
                        "required": true
                    },
                    "Id": {
                        "description": "The id of the field",
                        "type": "string",
                        "required": true
                    },
                    "Items": {
                        "description": "",
                        "type": "string",
                        "required": true
                    },
                    "SelectedItem": {
                        "description": "The value which is selected",
                        "type": "array",
                        "required": false,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },


            "NewCheckBoxApiModel": {
                "description": "Type which describes a new CheckBox which will be added to the document",
                "type": "object",
                "properties": {
                    "Height": {
                        "description": "The height of the CheckBox field",
                        "type": "number",
                        "required": true
                    },
                    "Width": {
                        "description": "The width of the CheckBox field",
                        "type": "number",
                        "required": true
                    },
                    "Top": {
                        "description": "Top position for CheckBox field",
                        "type": "number",
                        "required": true
                    },
                    "Left": {
                        "description": "Left position for CheckBox field",
                        "type": "number",
                        "required": true
                    },
                    "PageIndex": {
                        "description": "Index of the page where CheckBox field will be applied",
                        "type": "number",
                        "required": true
                    },
                    "AssignedToRecipientEmail": {
                        "description": "The recipient identifier to which this new CheckBox field will be assigned to",
                        "type": "string",
                        "required": true
                    },
                    "Id": {
                        "description": "The id of the field",
                        "type": "string"
                    },
                    "IsChecked": {
                        "description": "Sets if the checkbox is checked or not",
                        "type": "boolean",
                        "required": true
                    },
                    "IsRequired": {
                        "description": "Flag which determines if form filling the CheckBox is required",
                        "type": "boolean",
                        "required": false
                    }
                }
            },

            "NewAnnotationApiModel": {
                "description": "Type which annotations",
                "type": "object",
                "properties": {
                    "Height": {
                        "description": "The height of the annotation field",
                        "type": "number",
                        "required": true
                    },
                    "Top": {
                        "description": "Top position for annotation field",
                        "type": "number",
                        "required": true
                    },
                    "Left": {
                        "description": "Left position for annotation field",
                        "type": "number",
                        "required": true
                    },
                    "PageIndex": {
                        "description": "Index of the page where annotation field will be applied",
                        "type": "number",
                        "required": true
                    },
                    "FontSize": {
                        "description": "Size of the font",
                        "type": "number",
                        "required": true
                    },
                    "Type": {
                        "description": "Type of the annotation",
                        "type": "object",
                        "required": "true",
                        "$ref": "#/components/schemas/AnnotationTypeApi"
                    },
                    "CustomText": {
                        "description": "Annotation text. Used only if the annotation type is set to Custom",
                        "type": "string",
                        "required": false
                    }
                }
            },

            "NewSignatureApiModel": {
                "description": "Type which describes a new signature field",
                "type": "object",
                "properties": {
                    "Height": {
                        "description": "Height of the signature field",
                        "type": "number",
                        "required": true
                    },
                    "Width": {
                        "description": "Width of the signature field",
                        "type": "number",
                        "required": true
                    },
                    "Top": {
                        "description": "Top position for signature field",
                        "type": "number",
                        "required": true
                    },
                    "Left": {
                        "description": "Left position for signature field",
                        "type": "number",
                        "required": true
                    },
                    "PageIndex": {
                        "description": "Index of the PDF page to which the new signature will be added",
                        "type": "number",
                        "required": true
                    },
                    "AssignedToRecipientEmail": {
                        "description": "The recipient identifier to which this new signature field will be assigned to.",
                        "type": "string",
                        "required": true
                    },
                    "SignatureType": {
                        "description": "The signature type",
                        "type": "object",
                        "required": true,
                        "$ref": "#/components/schemas/SignatureTypeApi"
                    }
                }
            },


            "AssignmentApiModel": {
                "description": "Type which describes field assignment",
                "type": "object",
                "properties": {
                    "AssignedToRecipientEmail": {
                        "description": "The form field id",
                        "type": "string",
                        "required": true
                    },
                    "Fields": {
                        "description": "Fields to assign",
                        "type": "array",
                        "required": true,
                        "items": {
                            "$ref": "#/components/schemas/FieldAssignmentApiModel"
                        }
                    },
                    "Signatures": {
                        "description": "Fields to assign",
                        "type": "array",
                        "required": true,
                        "items": {
                            "$ref": "#/components/schemas/SignatureAssignmentApiModel"
                        }
                    }
                }
            },

            "FieldAssignmentApiModel": {
                "description": "Type which describes field assignment",
                "type": "object",
                "properties": {
                    "FieldId": {
                        "description": "The form field id",
                        "type": "string",
                        "required": true
                    },
                    "IsRequired": {
                        "description": "Flag to determine is the field needs to be marked as required or not",
                        "type": "boolean",
                        "required": false
                    }
                }
            },


            "SignatureAssignmentApiModel": {
                "description": "Type which describes field assignment",
                "type": "object",
                "properties": {
                    "FieldId": {
                        "description": "The form field id",
                        "type": "string",
                        "required": "true"
                    },
                    "SignatureType": {
                        "description": "The signature type",
                        "type": "object",
                        "required": true,
                        "$ref": "#/components/schemas/SignatureTypeApi"
                    }
                }
            },


            "OverwriteFieldValueApiModel": {
                "description": "Type used to set form field's value",
                "type": "object",
                "properties": {
                    "FieldName": {
                        "description": "The name of the PDF form field",
                        "type": "string"
                    },
                    "FieldValue": {
                        "description": "The value to set for PDF form field",
                        "type": "string"
                    }
                }
            },
            "RecipientApiModel": {
                "description": "Model which defines a recipient",
                "type": "object",
                "properties": {
                    "Email": {
                        "description": "The recipient email address",
                        "type": "string",
                        "required": true
                    },
                    "Name": {
                        "description": "Full name of the recipient",
                        "type": "string",
                        "required": true
                    },
                    "Index": {
                        "description": "The index of the recipient. In serial signing mode this represents the position at which he signs the document",
                        "type": "number",
                        "required": true
                    },
                    "PersonalMessage": {
                        "description": "A specific personal message just for this recipient",
                        "type": "string",
                        "required": false
                    },
                    "RecipientType": {
                        "description": "Specify the recipient type",
                        "type": "object",
                        "required": true,
                        "$ref": "#/components/schemas/RecipientTypeApi"
                    },
                    "RecipientAuthenticationMethods": {
                        "description": "Set authentication types",
                        "type": "array",
                        "required": "false",
                        "items": {
                            "$ref": "#/components/schemas/RecipientAuthenticationApiModel"
                        }
                    },
                    "AutomaticSignerProfileIdentifier": {
                        "description": "The automatic signing profile",
                        "type": "string",
                        "required": false
                    }
                }
            },
            "FileAccessApiModel": {
                "description": "Custom file access type which specified to which recipient is the file assigned",
                "type": "object",
                "properties": {
                    "FileIndex": {
                        "description": "Index of the file",
                        "type": "number",
                        "required": true
                    },
                    "RecipientIndex": {
                        "description": "Index of the recipient",
                        "type": "number",
                        "required": true
                    }
                }
            },

            "AutomaticSigningProfileResultApiModel": {
                "description": "Specifies the return type for a automatic signing profile",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "The name of the profile",
                        "type": "string"
                    },
                    "Identifier": {
                        "description": "The automatic signing profile identifier",
                        "type": "string"
                    }
                }
            },

            "AutomaticSigningProfileApiModel": {
                "description": "Type which specifies a profile to be used for automatic signature",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "The name of the profile",
                        "type": "string",
                        "required": true
                    },
                    "SignatureImageBase64": {
                        "description": "The signature image in base64 format. Leave empty to use the default image",
                        "type": "string",
                        "required": false
                    },
                    "SignatureImprintName": {
                        "description": "The name of the signature imprint, leave empty for no imprint. The organization imprints can be retrieved by calling GetSignaturesImprints",
                        "type": "string",
                        "required": false
                    },
                    "CertificateTypeApi": {
                        "description": "The type of certificate to be used ",
                        "type": "object",
                        "required": true,
                        "$ref": "#/components/schemas/AutomaticSigningProfileCertificateTypeApi"
                    },
                    "StoredCertificate": {
                        "description": "This should be set when CertificateTypeApi = StoredInProfile",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/ProfileStoredCertificateApiModel"
                    },
                    "SignatureTypeIdentifierForRemoteSigningProvider": {
                        "description": "The remote signature type identifier. This should be set when CertificateTypeApi = RemoteSigningProvider",
                        "type": "integer",
                        "required": false
                    }
                }
            },

            "ProfileStoredCertificateApiModel": {
                "description": "Type which specifies a stored certificate to be used for automatic signature",
                "type": "object",
                "properties": {
                    "CertificateBase64": {
                        "description": "The certificate specified as a BASE64 encoded string",
                        "type": "string",
                        "required": true
                    },
                    "CertificatePassword": {
                        "description": "The certificate password",
                        "type": "string",
                        "required": false
                    }
                }
            },

            "ReminderOptionsApiModel": {
                "description": "Reminder options type",
                "type": "object",
                "properties": {
                    "EnableReminders": {
                        "description": "Flag to enable notifications for envelope",
                        "type": "boolean"
                    },
                    "FinalWarningReminderDay": {
                        "description": "The number of days before the envelope expiration when the final expiration warning is sent",
                        "type": "number"
                    },
                    "RecurrentEachDays": {
                        "description": "The number of recurrent days when reminders will be sent.",
                        "type": "number"
                    }
                }
            },
            "EmailSenderTypeApi": {
                "description": "Specifies the signer download document action : 1 - User, 2 - Organization, 3 - ApplicationName",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3"
                ],
                "x-enum-values": [{
                        "numericValue": "1",
                        "identifier": "User"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "Organization"
                    },
                    {
                        "numericValue": "3",
                        "identifier": "ApplicationName"
                    }
                ],
                "x-ms-enum": []
            },
            "OrganizationDocumentRetentionApiModel": {
                "description": "Type description for organization document expiration model",
                "type": "object",
                "properties": {
                    "EnableDocumentExpiration": {
                        "description": "Determines if the document expiration is enabled or not",
                        "type": "boolean"
                    },
                    "NumberOfDays": {
                        "description": "The number of days after which the envelope will be automatically deleted.The value must be between 3 and 90",
                        "type": "boolean"
                    }
                }
            },
            "OrganizationPoliciesApiModel": {
                "description": "Type description for UserInvitation model",
                "type": "object",
                "properties": {
                    "RequireSignerAuthentication": {
                        "description": "This flag determines if signer authentication must be enforce for each new sent envelope",
                        "type": "boolean"
                    },
                    "MetadataEditorRedirect": {
                        "description": "This flag determines if signer authentication must be enforce for each new sent envelope",
                        "$ref": "#/components/schemas/MetadataEditorRedirectApiModel"
                    }
                }
            },
            "MetadataEditorRedirectApiModel": {
                "description": "Type description for UserInvitation model",
                "type": "object",
                "properties": {
                    "EnableRedirect": {
                        "description": "Flag which determines if the metadata url editor redirect is enabled or not",
                        "type": "boolean"
                    },
                    "Url": {
                        "description": "The url to redirect to",
                        "type": "string"
                    }
                }
            },
            "OrganizationVisualCustomizationApiModel": {
                "description": "Type description for UserInvitation model",
                "type": "object",
                "properties": {
                    "OrganizationLogoBase64": {
                        "description": "The organization logo sent as BASE64 encoded string",
                        "type": "string"
                    },
                    "CSSCustomization": {
                        "description": "CSS customization for WebSign",
                        "type": "string"
                    }
                }
            },
            "OrganizationUpdateSettingsApiModel": {
                "description": "Type description for updating organization settings model",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "Set the organization name",
                        "type": "string"
                    },
                    "DefaultEmailSubject": {
                        "description": "Set the default email subject for 'Sign' emails",
                        "type": "string"
                    },
                    "DefaultEmailBody": {
                        "description": "Set the default email body for 'Sign' emails",
                        "type": "string"
                    },
                    "DefaultEmailTemplateLanguage": {
                        "description": "Set the default language for new drafts. Call GetEmailTemplateLanguages to obtain the list of all supported languages",
                        "type": "string"
                    },
                    "EmailSenderType": {
                        "description": "Set the organization name",
                        "$ref": "#/components/schemas/EmailSenderTypeApi"
                    },
                    "DocumentRetention": {
                        "description": "Set the organization name",
                        "$ref": "#/components/schemas/OrganizationDocumentRetentionApiModel"
                    },
                    "Policies": {
                        "description": "Set the organization name",
                        "$ref": "#/components/schemas/OrganizationPoliciesApiModel"
                    },
                    "VisualCustomization": {
                        "description": "Set the organization name",
                        "$ref": "#/components/schemas/OrganizationVisualCustomizationApiModel"
                    },
                    "SignatureSettings": {
                        "description": "Set the organization signing settings",
                        "$ref": "#/components/schemas/OrganizationSigningSettingsApiModel"
                    }
                }
            },
            "OrganizationSigningSettingsApiModel": {
                "description": "Type description for organization sign settings",
                "type": "object",
                "properties": {
                    "AutomaticFinishAfterSigning": {
                        "description": "Enable/disable the option to automatically finish a SignStep after signing all signature fields",
                        "type": "boolean"
                    },
                    "ForceSignerToReadDocument": {
                        "description": "Enable/disable the option to force the user to read the document before being allowed to sign",
                        "type": "boolean"
                    },
                    "ShowSignerIntroductionDetailsPage": {
                        "description": "Enable/disable the option to show the signer the introduction page with details about previous signers and sender",
                        "type": "boolean"
                    },
                    "SigningConfirmationForProfileAndClickToSign": {
                        "description": "Enable/disable the option to ask for signature confirmation when signing with a profile / Click2Sign signature type",
                        "type": "boolean"
                    },
                    "EnableBrowserGeolocationRequest": {
                        "description": "Enable/disable the option to ask for browser geolocation",
                        "type": "boolean"
                    },
                    "AllowRejectWithoutRejectionText": {
                        "description": "Enable/disable the option to allow signers to reject without entering the rejection reason",
                        "type": "boolean"
                    },
                    "AllowSignerToUploadImageForDrawToSign": {
                        "description": "Enable/disable the option to allow the user to upload his own signature image when using a Draw2Sign signature type",
                        "type": "boolean"
                    },
                    "DocumentDownload": {
                        "description": "Enable/disable the option to allow the user to upload his own signature image when using a Draw2Sign signature type",
                        "$ref": "#/components/schemas/SignerDownloadDocumentActionTypeApi"
                    },
                    "DocumentDownloadRedirectUrl": {
                        "description": "Set the redirect url, only if DocumentDownload = RedirectToUrl",
                        "type": "string"
                    },
                    "SendNotificationOnEnvelopeCancel": {
                        "description": "Enable/disable the recipient notification sent when a envelope is canceled",
                        "type": "boolean"
                    },
                    "SendNotificationOnEnvelopeDelete": {
                        "description": "Enable/disable the recipient notification sent when a envelope is deleted",
                        "type": "boolean"
                    },
                    "ApplyImprintForDraw2SignSignatures": {
                        "description": "Enable/disable if the signature imprint is applied when signing with Draw2Sign signatures",
                        "type": "boolean"
                    },
                    "ApplyImprintForProfileSignatures": {
                        "description": "Enable/disable if the signature imprint is applied when signing profile  signature",
                        "type": "boolean"
                    },
                    "EnableLongTermValidation": {
                        "description": "Enable/disable support for LTV signatures",
                        "type": "boolean"
                    }
                }
            },

            "TemplateItemResultApiModel": {
                "description": "Template item type",
                "type": "object",
                "properties": {
                    "IsSharedTemplate": {
                        "description": "Boolean flag to know if the template is shared or not",
                        "type": "boolean"
                    },
                    "Id": {
                        "description": "Id of the template",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the template",
                        "type": "string"
                    },
                    "LastUpdateDateUTC": {
                        "description": "The last update date of the template",
                        "type": "string"
                    },
                    "Files": {
                        "description": "Array of filenames",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },

            "FormFieldResultApiModel": {
                "description": "FormFieldResultApiModel type",
                "type": "object",
                "properties": {
                    "Id": {
                        "description": "Form field id",
                        "type": "string"
                    },
                    "PageNumber": {
                        "description": "The page number on which the form field is found",
                        "type": "number"
                    },
                    "FieldType": {
                        "description": "The type of the form field",
                        "type": "object",
                        "$ref": "#/components/schemas/FormFieldTypeApi"
                    }
                }
            },

            "TeamShareApiModel": {
                "description": "Type used to specify team members",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "Name of the team",
                        "type": "string",
                        "required": true
                    },
                    "MemberEmails": {
                        "description": "Array of organization user emails which will be added to the team",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "required": true
                        }
                    }
                }
            },

            "TeamHierarchicalApiModel": {
                "description": "Type used to specify team members of a hierarchical team",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "Name of the team",
                        "type": "string",
                        "required": true
                    },
                    "Members": {
                        "description": "Members of the team",
                        "type": "array",
                        "required": true,
                        "items": {
                            "$ref": "#/components/schemas/HierarchicalTeamMember"
                        }
                    }
                }
            },

            "HierarchicalTeamMember": {
                "description": "Type used to specify a hierarchical team member",
                "type": "object",
                "properties": {
                    "Email": {
                        "description": "Email address of the team member",
                        "type": "string"
                    },
                    "Index": {
                        "description": "Index of the team members. Members with lower indexes see the envelopes of the other members",
                        "type": "number"
                    }
                }
            },


            "TemplateDetailsResultApiModel": {
                "description": "Template details type",
                "type": "object",
                "properties": {

                    "TemplateId": {
                        "description": "The template identifier",
                        "type": "string"
                    },
                    "Name": {
                        "description": "Template name",
                        "type": "string"
                    },
                    "IsBulk": {
                        "description": "Flag which shows if this is a draft with bulk recipients",
                        "type": "boolean"
                    },
                    "ReminderOptions": {
                        "description": "Enable reminders and set specific options",
                        "type": "object",
                        "$ref": "#/components/schemas/ReminderOptionsApiModel"
                    },
                    "Recipients": {
                        "description": "Set the template recipients",
                        "type": "object",
                        "$ref": "#/components/schemas/RecipientApiModel"
                    },
                    "Documents": {
                        "description": "Set the template documents",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentResultApiModel"
                    },
                    "CreationDateUTC": {
                        "description": "Creation date of the template",
                        "type": "string"
                    },
                    "LastUpdateDateUTC": {
                        "description": "The last update date of the template",
                        "type": "string"
                    },
                    "Language": {
                        "description": "Language for email notifications. Leave empty for default",
                        "type": "string"
                    },
                    "SignersShouldReceiveFinishedDocument": {
                        "description": "Flag which determines if signers will receive final signed documents",
                        "type": "boolean"
                    },
                    "Metadata": {
                        "description": "Template metadata",
                        "type": "string"
                    },
                    "CertifyDocumentsBeforeSending": {
                        "description": "Flag which determines if the documents will be certified before sending",
                        "type": "boolean"
                    },
                    "FileAccessMode": {
                        "description": "Set the file access mode",
                        "type": "object",
                        "$ref": "#/components/schemas/FileAccessModeApi"
                    },
                    "PreventFormFieldEditOnEnvelopeCompletion": {
                        "description": "Flag which determines if the document form fields will be disabled on envelope completion",
                        "type": "boolean"
                    },
                    "IsSharedTemplate": {
                        "description": "Boolean flag to know if the template is shared or not",
                        "type": "boolean"
                    }
                }
            },
            "DraftDetailsResultApiModel": {
                "description": "Draft details",
                "type": "object",
                "properties": {
                    "DraftId": {
                        "description": "The id of the draft",
                        "type": "string"
                    },
                    "Name": {
                        "description": "Draft name",
                        "type": "string"
                    },
                    "IsBulk": {
                        "description": "Flag which shows if this is a draft with bulk recipients",
                        "type": "boolean"
                    },
                    "ReminderOptions": {
                        "description": "Enable reminders and set specific options",
                        "type": "object",
                        "$ref": "#/components/schemas/ReminderOptionsApiModel"
                    },
                    "Documents": {
                        "description": "Set the draft documents",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentResultApiModel"
                    },
                    "Recipients": {
                        "description": "Set the draft recipients",
                        "type": "object",
                        "$ref": "#/components/schemas/RecipientApiModel"
                    },
                    "CreationDateUTC": {
                        "description": "Creation date of the draft",
                        "type": "string"
                    },
                    "LastUpdateDateUTC": {
                        "description": "The last update date of the draft",
                        "type": "string"
                    },
                    "Language": {
                        "description": "Language for email notifications. Leave empty for default",
                        "type": "string"
                    },
                    "SignersShouldReceiveFinishedDocument": {
                        "description": "Flag which shows if the signers will also received the finished documents",
                        "type": "boolean"
                    },
                    "Metadata": {
                        "description": "Draft metadata",
                        "type": "string"
                    },
                    "CertifyDocumentsBeforeSending": {
                        "description": "Flag which shows if the documents were certified before sending",
                        "type": "boolean"
                    },
                    "PreventFormFieldEditOnEnvelopeCompletion": {
                        "description": "Flag which determines if the document form fields will be disabled on envelope completion",
                        "type": "boolean"
                    },

                    "FileAccessMode": {
                        "description": "Set to true to enable recipient delegation",
                        "type": "object",
                        "$ref": "#/components/schemas/FileAccessModeApi"
                    }
                }
            },
            "ContactResultApiModel": {
                "description": "Contact result type",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "The name of the contact",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The email of the contact",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The phone number of the contact",
                        "type": "string"
                    }
                }
            },


            "RecipientAuthenticationApiModel": {
                "description": "Authentication details for recipient",
                "type": "object",
                "properties": {
                    "AuthenticationType": {
                        "description": "Authentication type",
                        "type": "object",
                        "$ref": "#/components/schemas/RecipientTypeApi"
                    },
                    "AuthorizationDetails": {
                        "description": "Set authentication data. For password authentication set the password, for SMS set the phone number  ",
                        "type": "string",
                        "required": true
                    }
                }
            },

            "CallbackApiModel": {
                "description": "CallbackApiModel model definition",
                "type": "object",
                "properties": {
                    "CallbackEnvelopeStatusChangedUrl": {
                        "description": "Callback URL for envelope status",
                        "type": "string"
                    },
                    "CallbackRecipientActionUrl": {
                        "description": "Callback URL for recipient action",
                        "type": "string"
                    },
                    "AuthenticationType": {
                        "description": "Authentication type",
                        "type": "object",
                        "$ref": "#/components/schemas/CallbackAuthenticationTypeApi"
                    },
                    "BasicAuthenticationDetails": {
                        "description": "Data for basic authentication. Only set this if AuthenticationType = Basic",
                        "type": "object",
                        "$ref": "#/components/schemas/CallbackBasicAuthentication"
                    },
                    "CustomHeaderAuthenticationDetails": {
                        "description": "Data for custom header authentication. Only set this if AuthenticationType = CustomHeader",
                        "type": "object",
                        "$ref": "#/components/schemas/CallbackCustomHeaderAuthentication"
                    }
                }
            },

            "CallbackBasicAuthentication": {
                "description": "CallbackBasicAuthentication model definition",
                "type": "object",
                "properties": {
                    "UserName": {
                        "description": "Username used for authentication",
                        "type": "string",
                        "required": true
                    },
                    "Password": {
                        "description": "Password used for authentication",
                        "type": "string",
                        "required": true
                    }
                }
            },

            "CallbackCustomHeaderAuthentication": {
                "description": "CallbackCustomHeaderAuthentication model definition",
                "type": "object",
                "properties": {
                    "HeaderName": {
                        "description": "Header name used for authentication",
                        "type": "string",
                        "required": "true"
                    },
                    "HeaderValue": {
                        "description": "Header value used for authentication",
                        "type": "string",
                        "required": "true"
                    }
                }
            },

            "SignSettingsApiModel": {
                "description": "SignSettingsApiModel definition",
                "type": "object",
                "properties": {
                    "SigningConfirmationForProfileAndClickToSign": {
                        "description": "Flag which determines if the signer has to confirm when signing a ClickToSign / profile  signature",
                        "type": "boolean",
                        "required": "true"
                    },
                    "AutomaticFinishAfterSigning": {
                        "description": "Flag which determines if the signing process is finished automatically after the last signature field is signed",
                        "type": "boolean",
                        "required": "true"
                    },
                    "ForceSignerToReadDocument": {
                        "description": "Flag which determines if the signer must read the document first before being allowed to sign it",
                        "type": "boolean",
                        "required": "true"
                    },
                    "ShowSignerIntroductionDetailsPage": {
                        "description": "Flag which determines if the signer is shown a introduction page with details about the document sender",
                        "type": "boolean",
                        "required": true
                    },
                    "EnableBrowserGeolocationRequest": {
                        "description": "Flag which determines if the browser geo-location request is enabled",
                        "type": "boolean",
                        "required": true
                    },
                    "AllowSignerToUploadImageForDrawToSign": {
                        "description": "Flag which determines if the user is allowed to upload signature image when signing a DrawToSign signature field",
                        "type": "boolean",
                        "required": true
                    },
                    "DocumentDownload": {
                        "description": "Set the document download option",
                        "type": "object",
                        "$ref": "#/components/schemas/SignerDownloadDocumentActionTypeApi",
                        "required": true
                    },
                    "DocumentDownloadRedirectUrl": {
                        "description": "Set the redirect URL. This should be set only when DocumentDownload = RedirectToUrl",
                        "type": "string",
                        "required": false
                    },

                    "AllowRejectWithoutRejectionText": {
                        "description": "Flag which determines if the user is allowed to reject signing without entering the reason",
                        "type": "boolean",
                        "required": true
                    }
                }
            },


            "CallbackAuthenticationTypeApi": {
                "description": "Specifies the callback authentication : 0 - None, 1 - Basic, 2 - CustomHeader",
                "type": "number",
                "enum": [
                    "0",
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                        "numericValue": "0",
                        "identifier": "None"
                    },
                    {
                        "numericValue": "1",
                        "identifier": "Basic"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "CustomHeader"
                    }
                ],
                "x-ms-enum": []
            },


            "SignerDownloadDocumentActionTypeApi": {
                "description": "Specifies the signer download document action : 1 - Allow, 2 - Prevent, 3 - RedirectToUrl",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3"
                ],
                "x-enum-values": [{
                        "numericValue": "1",
                        "identifier": "Allow"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "Prevent"
                    },
                    {
                        "numericValue": "3",
                        "identifier": "RedirectToUrl"
                    }
                ],
                "x-ms-enum": []
            },

            "FormFieldTypeApi": {
                "description": "Specifies the type of form field : 1 - TextBox, 2 - RadioButton, 3 - CheckBox, 4 - ComboxBox, 5 - ListBox, 6 - Signature, 7 - Attachment",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7"
                ],
                "x-enum-values": [{
                        "numericValue": "1",
                        "identifier": "TextBox"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "RadioButton"
                    },
                    {
                        "numericValue": "3",
                        "identifier": "CheckBox"
                    },
                    {
                        "numericValue": "4",
                        "identifier": "ComboxBox"
                    },
                    {
                        "numericValue": "5",
                        "identifier": "ListBox"
                    }, {
                        "numericValue": "6",
                        "identifier": "Signature"
                    },
                    {
                        "numericValue": "6",
                        "identifier": "Attachment"
                    }
                ],
                "x-ms-enum": []
            },

            "FileAccessModeApi": {
                "description": "Specifies the file type access : 1 - AllFiles , 2 - Custom",
                "type": "number",
                "enum": [
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                        "numericValue": "1",
                        "identifier": "AllFiles"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "Custom"
                    }
                ]
            },

            "AnnotationTypeApi": {
                "description": "Specifies the type of annotation : 1 - SenderName , 2 - SenderEmail, 3 - OrganizationName, 4 - Custom",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "x-enum-values": [{
                        "numericValue": "1",
                        "identifier": "SenderName"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "SenderEmail"
                    },
                    {
                        "numericValue": "3",
                        "identifier": "OrganizationName"
                    },
                    {
                        "numericValue": "4",
                        "identifier": "Custom"
                    }
                ]
            },


            "RecipientTypeApi": {
                "description": "Specifies the recipient type : 1 - Signer, 2 - ReceivesCopy",
                "type": "number",
                "enum": [
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                        "numericValue": "1",
                        "identifier": "Signer"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "ReceivesCopy"
                    }
                ],
                "x-enum-varnames": [
                    "Signer",
                    "ReceivesCopy"
                ],
                "x-enum-descriptions": [
                    "Signer",
                    "ReceivesCopy"
                ]
            },


            "RecipientAuthenticationTypeApi": {
                "description": "Specifies the recipient type : Password - 1 , SMS - 2",
                "type": "number",
                "enum": [
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                        "numericValue": "1",
                        "identifier": "Password"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "SMS"
                    }
                ]
            },

            "EnvelopeStatusTypeApi": {
                "description": "Specifies the envelope status : InProgress - 1 , Completed - 2, Canceled = 3, Expired = 4",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "x-enum-values": [{
                        "numericValue": "1",
                        "identifier": "InProgress"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "Completed"
                    },
                    {
                        "numericValue": "3",
                        "identifier": "Canceled"
                    },
                    {
                        "numericValue": "4",
                        "identifier": "Expired"
                    }
                ],
                "x-enum-varnames": [
                    "InProgress",
                    "Completed",
                    "Canceled",
                    "Expired"
                ],
                "x-enum-descriptions": [
                    "InProgress",
                    "Completed",
                    "Canceled",
                    "Expired"
                ]
            },

            "SignatureTypeApi": {
                "description": "Specifies the signature type : DrawTypeToSign - 0 , ClickToSign - 1, OTPSign = 2",
                "type": "number",
                "enum": [
                    "0",
                    "1",
                    "2"
                ],

                "x-enum-values": [{
                        "numericValue": "0",
                        "identifier": "DrawTypeToSign"
                    },
                    {
                        "numericValue": "1",
                        "identifier": "ClickToSign"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "OTPSign"
                    }
                ]
            },

            "AutomaticSigningProfileCertificateTypeApi": {
                "description": "Specifies the certificate type : Default - 1 , StoredInProfile - 1",
                "type": "number",
                "enum": [
                    "1",
                    "2"
                ],

                "x-enum-values": [{
                        "numericValue": "1",
                        "identifier": "Default"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "StoredInProfile"
                    }
                ]
            },

            "FindRecipientByEmailApiModel": {
                "description": "Input for finding a recipient by email",
                "type": "object",
                "properties": {
                    "RecipientEmail": {
                        "description": "The email of the recipient",
                        "type": "string",
                        "required": "true"
                    },
                    "RecipientType": {
                        "description": "Specify the recipient type",
                        "type": "object",
                        "$ref": "#/components/schemas/RecipientTypeApi",
                        "required": "true"
                    }
                }
            },

            "FindRecipientByIndexApiModel": {
                "description": "Input for finding a recipient by index",
                "type": "object",
                "properties": {
                    "Index": {
                        "description": "The index of the recipient",
                        "type": "number",
                        "required": true
                    }
                }
            },


            "RecipientStatusApi": {
                "description": "Specifies the recipient status : NotSigned - 0 , Opened - 1, Signed = 2, Rejected = 3",
                "type": "number",
                "enum": [
                    "0",
                    "1",
                    "2",
                    "3"
                ]
            },

            "FillFormInputApiModel": {
                "description": "Input for GetFinishedFormFields",
                "type": "object",
                "properties": {
                    "EnvelopeId": {
                        "description": "The id of the envelope",
                        "type": "string"
                    },
                    "RecipientEmail": {
                        "description": "The email of the recipient",
                        "type": "string"
                    }
                }
            },

            "NewContactApiModel": {
                "description": "Model for adding a new contact",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "The name of the contact",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The email of the contact",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The phone number of the contact",
                        "type": "string"
                    },
                    "Address": {
                        "description": "The address of the contact",
                        "type": "string"
                    },
                    "Company": {
                        "description": "The name of the contact's company",
                        "type": "string"
                    }
                }
            },

            "DeleteEnvelopeRecipientApiModel": {
                "type": "object",
                "properties": {
                    "EnvelopeId": {
                        "description": "The id of the envelope to which the recipient belongs",
                        "type": "string"
                    },
                    "ByIndex": {
                        "description": "The index of the recipient which will be deleted",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/FindRecipientByIndexApiModel"
                    },
                    "ByEmail": {
                        "description": "The email of the recipient which will be deleted",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/FindRecipientByEmailApiModel"
                    }
                }
            },


            "LicenseResultApiModel": {
                "type": "object",
                "properties": {
                    "ExpirationDateUTC": {
                        "description": "The license expiration date (UTC timestamp)",
                        "type": "string"
                    },
                    "EnvelopesTotal": {
                        "description": "Total number of envelopes allowed to be sent for signing",
                        "type": "integer"
                    },
                    "EnvelopesUsed": {
                        "description": "Total numbers of envelopes used until now",
                        "type": "integer"
                    },
                    "UsersTotal": {
                        "description": "Total numbers of allowed users to be added to organization",
                        "type": "integer"
                    },
                    "UsersUsed": {
                        "description": "Total numbers of users added to organization",
                        "type": "integer"
                    }

                }
            },



            "OrganizationUserApiModel": {
                "type": "object",
                "properties": {
                    "FullName": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "Email": {
                        "description": "Email address of the user",
                        "type": "string"
                    },
                    "OrganizationAdministrator": {
                        "description": "Flag which determines if the user is a organization administrator",
                        "type": "boolean"
                    }
                }
            },


            "TemplateReplaceRecipientApiModel": {
                "type": "object",
                "properties": {
                    "ByIndex": {
                        "description": "Specify the index",
                        "type": "object",
                        "$ref": "#/components/schemas/FindRecipientByIndexApiModel"
                    },
                    "ByEmail": {
                        "description": "The email of the recipient which will be deleted",
                        "type": "object",
                        "$ref": "#/components/schemas/FindRecipientByEmailApiModel"
                    },
                    "Email": {
                        "description": "The new recipient email",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The new recipient name",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The recipient phone number",
                        "type": "string"
                    },
                    "PersonalMessage": {
                        "description": "The new recipient personal message",
                        "type": "string"
                    },
                    "RecipientAuthenticationMethods": {
                        "description": "Set authentication types",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientAuthenticationApiModel"
                        }
                    }
                }
            },

            "ReplaceEnvelopeRecipientApiModel": {
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/TemplateReplaceRecipientApiModel",
                    "type": "object"
                }],

                "properties": {
                    "EnvelopeId": {
                        "description": "The id of the envelope",
                        "type": "string"
                    },

                    "AutomaticSignerProfileIdentifier": {
                        "description": "Identifier for automatic profile",
                        "type": "string"
                    }
                }
            },

            "RecipientFormFillApiModel": {
                "properties": {
                    "RecipientEmail": {
                        "description": "The email address of the recipient",
                        "type": "string"
                    },
                    "Items": {
                        "description": "Form fill data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormFillResultApiModel"
                        }

                    }
                }
            },

            "FormFillResultApiModel": {
                "type": "object",

                "properties": {
                    "FormFieldId": {
                        "description": "The id of the form field",
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value of the form field",
                        "type": "string"
                    },
                    "FileName": {
                        "description": "The name of the file to which the form field belongs to",
                        "type": "string"
                    },
                    "FieldType": {
                        "description": "The type of form field",
                        "type": "string",
                        "$ref": "#/components/schemas/FormFieldTypeApi"
                    },
                    "SignatureType": {
                        "description": "If the form field is a signature, this will contain the signature type",
                        "type": "object",
                        "$ref": "#/components/schemas/SignatureTypeApi"
                    }
                }
            },

            "FileInput": {
                "type": "object",
                "properties": {
                    "Filename": {
                        "description": "The name of the file",
                        "type": "string"
                    },
                    "FileContent": {
                        "description": "The content of the file",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },

            "FileInputBase64": {
                "type": "object",
                "properties": {
                    "Filename": {
                        "description": "The name of the file",
                        "type": "string"
                    },
                    "FileContentBase64": {
                        "description": "The content of the file as base64 encoded string",
                        "type": "string"
                    }
                }
            },

            "GetCompletedFormFieldsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientFormFillApiModel"
                        }
                    }
                }
            },

            "GetContactsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactResultApiModel"
                        }
                    }
                }
            },

            "DownloadEnvelopeCompletedDocumentsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },

            "DownloadEnvelopeIncompleteDocumentsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },

            "GetTemplateDetailsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the api call",
                        "type": "object",
                        "$ref": "#/components/schemas/TemplateDetailsResultApiModel"
                    }
                }
            },

            "GetDraftDetailsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the api call",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DraftDetailsResultApiModel"
                        }
                    }
                }
            },

            "SendEnvelopeResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the api call",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SendEnvelopeResultApiModel"
                        }
                    }
                }
            },

            "GetTemplatesResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateItemResultApiModel"
                        }
                    }
                }
            },

            "GetEnvelopesToSignResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnvelopeToSignResultApiModel"
                        }
                    }
                }
            },

            "GetItemsArrayResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemResultApiModel"
                        }
                    }
                }
            },
            "GetEnvelopeDetailsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "object",
                        "$ref": "#/components/schemas/EnvelopeDetailsResultApiModel"
                    }
                }
            },
            "GetLicenseResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "object",
                        "$ref": "#/components/schemas/LicenseResultApiModel"
                    }
                }
            },

            "GetOrganizationUsersResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationUserApiModel"
                        }
                    }
                }
            },

            "BulksignResultId": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The id of newly created entity",
                        "type": "string"
                    }
                }
            },


            "BulksignResultNumeric": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API call",
                        "type": "number"
                    }
                }
            },
            "BulksignResultStringArray": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BulksignResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API call",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BulksignResult": {
                "description": "The result type",
                "type": "object",
                "properties": {
                    "ErrorMessage": {
                        "description": "Error message when the API call fails. Will be empty when successful",
                        "type": "string"
                    },
                    "IsSuccessful": {
                        "description": "Boolean flag which indicates if the API call was successful or not",
                        "type": "boolean"
                    },
                    "ErrorCode": {
                        "description": "The code of the error",
                        "type": "number"
                    },
                    "RequestId": {
                        "description": "The id of the request. In case of failed requests, send it to us for troubleshooting. Will be empty for successful requests",
                        "type": "string"
                    }
                }
            }
        },

        "securitySchemes": {
            "AuthorizationHeader": {
                "type": "apiKey",
                "name": "X-Bulksign-Authentication",
                "in": "header",
                "description": "Sample value : 32GE2GGJ329HOPZXC232322543263724;test@test.com"
            }
        }
    }
}