{
    "openapi": "3.0.0",
    "servers": [{
        "url": "https://bulksign.com/webapi/rest/"
    	}],
    "info": {
        "version": "4.117",
        "title": "Bulksign REST API",
        "description": "Bulksign OpenAPI definition. For .NET specifically, please use our [.NET SDK](https://www.nuget.org/packages/BulksignSdk). API code samples which demonstrate how to call ALL these APIs is available [on Github](https://github.com/bulksign/BulksignApiSamples)",
        "contact": {
            "email": "contact@bulksign.com"
        }
    },
    "tags": [{
        "name": "Envelope",
        "description": "Envelope specific APIs"
    },
    {
        "name": "File",
        "description": "APIs which enable working with a single document file"
    },
    {
        "name": "Recipient",
        "description": "Recipient specific APIs"
    }, {
        "name": "Completed Envelope Download",
        "description": "APIs to download completed envelope documents"
    }, {
        "name": "Draft",
        "description": "Draft specific APIs"
    }, {
        "name": "Template",
        "description": "Template specific APIs"
    }, {
        "name": "User",
        "description": "User specific APIs"
    }, {

        "name" : "User Contacts",
        "description" : "User contacts APIs"
    },{
        "name": "User Automatic Signing Profiles",
        "description": "List of APIs designed to manage the user's automatic signing profiles"
    },{
        "name": "Organization",
        "description": "Organization specific APIs. Can only be used by organization administrators"
    },{
        "name": "Organization Users",
        "description": "APIs designed to managed the organization users. Can only be used by organization administrators"
    },{
        "name": "Automatic Signing Profiles",
        "description": "Designed to manage the organization automatic signing profiles. Requires organization administrator rights or custom role with acces to automatic signing profiles"
    },
    {
        "name": "Teams",
        "description": "Designed to manage the organziation teams. Requires organization administrator rights or custom role with acces to teams"
    },
    {
        "name": "Shared Contacts",
        "description": "Designed to manage the organziation shared contacts. Requires organization administrator rights or custom role with acces to shared contacts"
    },
    {
        "name": "Signature Stamps",
        "description": "Designed to manage the organziation signature stamps. Requires organization administrator rights or custom role with acces to signature stamps"
    },
    {
        "name": "Sign Groups",
        "description": "Designed to manage the organziation signing groups. Requires organization administrator rights or custom role with acces to sign groups"
    },
    {
        "name": "License",
        "description": "License specific APIs. Can only be used by organization administrators"
    }, {
        "name": "Version",
        "description": "Version specific APIs"
    }],
    "paths": {

        "/ResetSignatureType" :	{
			"post": {
                "tags": [
                    "Recipient"
                ],
                "summary": "Changes all the reamining unsigned signature types for a specific recipient",
                "operationId": "ResetSignatureType",
                 "requestBody": {
                    "required": true,
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetSignatureTypeApiModel"
                            }
                        }
                    }
                },
                 "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResultNumeric"
                                }
                            }
                        }
                    }
                }
            }
		},

		"/UnlockConcurrentRecipient" :	{
			"post": {
                "tags": [
                    "Recipient"
                ],
                "summary": "Unlocks access to envelope which is currently locked by specific concurrent recipient",
                "operationId": "UnlockConcurrentRecipient",
                 "requestBody": {
                    "required": true,
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/UnlockConcurrentRecipientApiModel"
                            }
                        }
                    }
                },
                 "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
		},

        "/AddEmailTemplate" :{
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "",
                "operationId": "AddEmailTemplate",
                "requestBody": {
                    "required": true,
                    "description": "Specifies the email template input",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EmailTemplateApiModel"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }

                }
            }
        },
        "/CreateOrganization":{
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Creates a new organization. Requires organization administrator rights. This endpoint ONLY works for on-premise version",
                "operationId": "CreateOrganization",
                "requestBody": {
                    "required": true,
                    "description": "Specifies the input files for the envelope and info about document parsing",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CreateOrganizationApiModel"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }

                }
            }
        },

        "/GetOrganizationUsers": {
            "post": {
                "tags": [
                    "Organization Users"
                ],
                "summary": "Gets the list of organization users",
                "operationId": "GetOrganizationUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetOrganizationUsersResult"
                                }
                            }
                        }
                    }

                }
            }
        },

        "/GetLicense": {
            "post": {
                "tags": [
                    "License"
                ],
                "summary": "Gets license information. Requires organization administrator rights",
                "operationId": "GetLicense",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLicenseResult"
                                }
                            }
                        }
                    }

                }
            }
        },

        "/PrepareSendEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Obtain a predefined SendEnvelopeApiModel from specified PDF documents",
                "operationId": "PrepareSendEnvelope",
                "requestBody": {
                    "required": true,
                    "description": "Specifies the input files for the envelope and info about document parsing",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PrepareEnvelopeApiModel"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvelopeApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SendEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Sends a envelope for signing",
                "operationId": "SendEnvelope",
                "requestBody": {
                    "required": true,
                    "description": "SendEnvelope input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvelopeApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendEnvelopeResultApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },
      
        "/SendReminder": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Sends email reminder for the current signer(s) of the envelope",
                "operationId": "SendReminder",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SendEnvelopeFromDraft": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Send a envelope to signing from an existing draft",
                "operationId": "SendEnvelopeFromDraft",
                "parameters": [{
                    "name": "draftId",
                    "in": "query",
                    "description": "The id of the draft",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SendEnvelopeFromTemplate": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Send a envelope to signing from a existing template",
                "operationId": "SendEnvelopeFromTemplate",
                "requestBody": {
                    "required": true,
                    "description": "The template model which allows replacing template recipients",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvelopeFromTemplateApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/DeleteEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Deletes an existing envelope",
                "operationId": "DeleteEnvelope",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CancelEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Cancel an 'in progress' envelope",
                "operationId": "CancelEnvelope",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/RestartEnvelope": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Restarts an expired envelope",
                "operationId": "RestartEnvelope",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetEnvelopeDetails": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Get detailed information about an envelope",
                "operationId": "GetEnvelopeDetails",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEnvelopeDetailsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SearchDrafts": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Search drafts using a specific search term",
                "operationId": "SearchDrafts",
                "parameters": [{
                    "name": "searchTerm",
                    "in": "query",
                    "description": "The search term",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetItemsArrayResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SearchTeamMembersDrafts": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Search drafts of team members",
                "operationId": "SearchTeamMembersDrafts",
                "parameters": [{
                    "name": "searchTerm",
                    "in": "query",
                    "description": "The search term",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetItemsArrayResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SearchEnvelopes" :{
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Search the user's envelopes",
                "operationId": "SearchEnvelopes",
                "parameters": [{
                    "name": "searchTerm",
                    "in": "query",
                    "description": "The search term",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetItemsArrayResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SearchTeamMembersEnvelopes": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Search the envelopes of team members",
                "operationId": "SearchTeamMembersEnvelopes",
                "parameters": [{
                    "name": "searchTerm",
                    "in": "query",
                    "description": "The search term",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetItemsArrayResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SearchTeamMembersTemplates": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Search the templates of team members",
                "operationId": "SearchTeamMembersTemplates",
                "parameters": [{
                    "name": "searchTerm",
                    "in": "query",
                    "description": "The search term",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetItemsArrayResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/SearchTemplates": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Search templates",
                "operationId": "SearchTemplates",
                "parameters": [{
                    "name": "searchTerm",
                    "in": "query",
                    "description": "The search term",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetItemsArrayResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetEnvelopesByStatus": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Gets an array of envelopes which have the specified status",
                "operationId": "GetEnvelopesByStatus",
                "parameters": [{
                    "name": "status",
                    "in": "query",
                    "description": "The status  : 1 - InProgress, 2 - Completed, 3 - Canceled, 4 - Expired",
                    "required": true,
                    "schema": {
                        "type": "number"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetItemsArrayResult"
                                    }

                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetEnvelopeStatus": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Gets the status of the specific envelope",
                "operationId": "GetEnvelopeStatus",
                "parameters": [{
                    "name": "id",
                    "in": "query",
                    "description": "The id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetEnvelopesToSign": {
            "post": {
                "tags": [
                    "Envelope"
                ],
                "summary": "Gets an array of envelopes that API caller has to sign",
                "operationId": "GetEnvelopesToSign",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetEnvelopesToSignResult"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetCompletedFormFields": {
            "post": {
                "tags": [
                    "Completed Envelope Download"
                ],
                "summary": "Get the values of the form fields filled by the envelope signers",
                "operationId": "GetCompletedFormFields",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "Id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],

                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCompletedFormFieldsResult"
                                }
                            }
                        }

                    }
                }
            }
        },

        "/DownloadEnvelopeIncompleteDocuments": {
            "post": {
                "tags": [
                    "Completed Envelope Download"
                ],
                "summary": "Returns a zip file with partially signed documents. If nobody signed the document yet, the envelope original files will be returned",
                "operationId": "DownloadEnvelopeIncompleteDocuments",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "Id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DownloadEnvelopeIncompleteDocumentsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        

        "/DownloadEnvelopeCompletedDocuments": {
            "post": {
                "tags": [
                    "Completed Envelope Download"
                ],
                "summary": "Returns a zip file which contains the envelope completed documents and the audit trail",
                "operationId": "DownloadEnvelopeCompletedDocuments",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "Id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DownloadEnvelopeCompletedDocumentsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/DownloadEnvelopeCompletedAttachments": {
            "post": {
                "tags": [
                    "Completed Envelope Download"
                ],
                "summary": "Returns a zip file with all the PDF file attachments for a completed envelope",
                "operationId": "DownloadEnvelopeCompletedAttachments",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "Id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DownloadEnvelopeCompletedAttachmentsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/DeleteEnvelopeRecipient": {
            "post": {
                "tags": [
                    "Recipient"
                ],
                "summary": "Deletes a recipient from a envelope",
                "operationId": "DeleteEnvelopeRecipient",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteEnvelopeRecipientApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/ReplaceEnvelopeRecipient": {
            "post": {
                "tags": [
                    "Recipient"
                ],
                "summary": "Replaces a recipient from a envelope",
                "operationId": "ReplaceEnvelopeRecipient",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/ReplaceEnvelopeRecipientApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GetUserDetails" :{
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Gets information about the user",
                "operationId": "GetUserDetails",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserDetailsResult"
                                }
                            }
                        }
                    }
                }
            }            
        },
        "/AddUserAutomaticSigningProfile": {
            "post": {
                "tags": [
                    "User Automatic Signing Profiles"
                ],
                "summary": "Add a new profile for automatic signatures",
                "operationId": "AddUserAutomaticSigningProfile",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/AutomaticSigningProfileApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetSignatureImprints": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get the list of signature imprints defined per organization",
                "operationId": "GetSignatureImprints",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiResultStringArray"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetCustomUserRoles": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get the list of custom user roles defined per organization. Requires administrator or custom role with acces to users",
                "operationId": "GetCustomUserRoles",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiResultStringArray"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetSignatureStamps": {
            "post": {
                "tags": [
                    "Signature Stamps"
                ],
                "summary": "Get the list of signature stamps defined per organization",
                "operationId": "GetSignatureStamps",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiResultStringArray"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetUserInterfaceLanguages": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get the list of UI languages usable by Bulksign",
                "operationId": "GetUserInterfaceLanguages",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiResultStringArray"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetEmailLanguages": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get the list of email languages usable in the organization",
                "operationId": "GetEmailLanguages",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiResultStringArray"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddSignatureStamp": {
            "post": {
                "tags": [
                    "Signature Stamps"
                ],
                "summary": "Add a new organization signature stamp",
                "operationId": "AddSignatureStamp",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/NewStampApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddOrganizationAutomaticSigningProfile": {
            "post": {
                "tags": [
                    "Automatic Signing Profiles"
                ],
                "summary": "Add a new organization profile for automatic signatures. Requires organization administrator rights or custom role with acces to automatic signing profiles",
                "operationId": "AddOrganizationAutomaticSigningProfile",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/AutomaticSigningProfileApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetUserAutomaticSigningProfiles": {
            "post": {
                "tags": [
                    "User Automatic Signing Profiles"
                ],
                "summary": "Get the list of user automatic signing profiles",
                "operationId": "GetUserAutomaticSigningProfiles",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json:": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserAutomaticSigningProfilesResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetOrganizationAutomaticSigningProfiles": {
            "post": {
                "tags": [
                    "Automatic Signing Profiles"
                ],
                "summary": "Get the list of organization automatic signing profiles",
                "operationId": "GetOrganizationAutomaticSigningProfiles",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutomaticSigningProfileResultApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddContact": {
            "post": {
                "tags": [
                    "User Contacts"
                ],
                "summary": "Adds a new user contact",
                "operationId": "AddContact",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/NewContactApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddSharedContact": {
            "post": {
                "tags": [
                    "Shared Contacts"
                ],
                "summary": "Adds a new shared contact",
                "operationId": "AddSharedContact",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/NewContactApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetContacts": {
            "post": {
                "tags": [
                    "User Contacts"
                ],
                "summary": "Gets the list of user contacts",
                "operationId": "GetContacts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetContactsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetSharedContacts": {
            "post": {
                "tags": [
                    "Shared Contacts"
                ],
                "summary": "Gets the list of shared contacts",
                "operationId": "GetSharedContacts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetContactsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetTemplatesCount": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Gets the number of templates available for user including shared templates",
                "operationId": "GetTemplatesCount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResultNumeric"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetTemplates": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Gets the list of templates available for user including shared templates",
                "operationId": "GetTemplates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTemplatesResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetTemplateDetails": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Get detailed informations about a template",
                "operationId": "GetTemplateDetails",
                "parameters": [{
                    "name": "templateId",
                    "in": "query",
                    "description": "The id of the template",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTemplateDetailsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateTemplate": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Creates a new template",
                "operationId": "CreateTemplate",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/DeleteTemplate": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Deletes the specified template",
                "operationId": "DeleteTemplate",
                "parameters": [{
                    "name": "templateId",
                    "in": "query",
                    "description": "Id of the template to delete",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/DeleteDraft": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Deletes the specified draft",
                "operationId": "DeleteDraft",
                "parameters": [{
                    "name": "draftId",
                    "in": "query",
                    "description": "Id of the draft to deleted",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateDraft": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Creates a new draft",
                "operationId": "CreateDraft",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateDraftFromFile": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Creates a new draft from file",
                "operationId": "CreateDraftFromFile",
                "parameters": [{
                    "name": "fileName",
                    "in": "query",
                    "description": "The name of the file including extension",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/octet-stream:": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateDraftFromFileBase64": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Creates a new draft from file",
                "operationId": "CreateDraftFromFileBase64",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/FileInputBase64"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResultId"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetDrafts": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Gets the list of user drafts",
                "operationId": "GetDrafts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDraftItemsArrayResult"
                                }
                            }
                        }
                    }

                }
            }
        },

        "/GetDraftDetails": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Gets the details of the specified draft",
                "operationId": "GetDraftDetails",
                "parameters": [{
                    "name": "draftId",
                    "in": "query",
                    "description": "The id of the draft",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDraftDetailsResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetDraftsCount": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Gets the number of drafts available for user",
                "operationId": "GetDraftsCount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResultNumeric"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateShareTeam": {
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Creates a team where envelopes are shared between all members of the team.",
                "operationId": "CreateShareTeam",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamShareApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/CreateHierarchicalTeam": {
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Creates a team where envelopes are shared between all members of the team.",
                "operationId": "CreateHierarchicalTeam",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamHierarchicalApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/StoreTemporaryFileBinary": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Stores the specified file, to be used afterwards from SendEnvelope/PrepareSendEnvelope",
                "operationId": "StoreTemporaryFileBinary",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/octet-stream:": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },


        "/StoreTemporaryFile": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Stores the specified file, to be used afterwards from SendEnvelope/PrepareSendEnvelope",
                "operationId": "StoreTemporaryFile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/FileInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },


        
        "/StoreTemporaryFileBase64": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Stores the specified file, to be used afterwards from SendEnvelope/PrepareSendEnvelope",
                "operationId": "StoreTemporaryFileBase64",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/FileInputBase64"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },


        "/AnalyzeFileBinary": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Analyze the specified PDF file, stores the file and returns information about form fields",
                "operationId": "AnalyzeFileBinary",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/octet-stream:": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnalyzedFileResultApiModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AnalyzeFile": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Analyze the specified PDF file, stores the file and returns information about form fields",
                "operationId": "AnalyzeFile",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/FileInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnalyzedFileResultApiModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AnalyzeFileBase64": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Analyze the specified PDF file and returns information about form fields",
                "operationId": "AnalyzeFileBase64",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/FileInputBase64"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnalyzedFileResultApiModel"
                                    }
                                }
                            }
                        }
                    }
                }

            }
        },

        "/UpdateOrganizationSettings": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Updates the organization settings. Requires organization administrator rights",
                "operationId": "UpdateOrganizationSettings",
                "requestBody": {
                    "required": true,
                    "description": "Input model for UpdateOrganizationSettings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUpdateSettingsApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/InviteUserToOrganization": {
            "post": {
                "tags": [
                    "Organization Users"
                ],
                "summary": "Invite the user to your organization using name and email",
                "operationId": "InviteUserToOrganization",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInvitationApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddUserToOrganization": {
            "post": {
                "tags": [
                    "Organization Users"
                ],
                "summary": "Add a new user to your organization using full user data.",
                "operationId": "AddUserToOrganization",
                "requestBody": {
                    "required": true,
                    "description": "Input model",
                    "content": {
                        "application/json:": {
                            "schema": {
                                "$ref": "#/components/schemas/NewUserApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/GetVersion": {
            "post": {
                "tags": [
                    "Version"
                ],
                "summary": "Returns the version number",
                "operationId": "GetVersion",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Version"
                ],
                "summary": "Returns the version number",
                "operationId": "GetVersionGet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/UpdateDraftSettings": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Updates the draft settings",
                "operationId": "UpdateDraftSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDraftApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddDocumentsRecipientsToDraft": {
            "post": {
                "tags": [
                    "Draft"
                ],
                "summary": "Adds new recipients and/or documents to a draft",
                "operationId": "AddDocumentsRecipientsToDraft",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddDocumentsOrRecipientsToDraftApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/AddDocumentsRecipientsToTemplate": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Adds new recipients and/or documents to a template",
                "operationId": "AddDocumentsRecipientsToTemplate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddDocumentsOrRecipientsToDraftApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/UpdateTemplateSettings": {
            "post": {
                "tags": [
                    "Template"
                ],
                "summary": "Updates the template settings",
                "operationId": "UpdateTemplateSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTemplateApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/UpdateUserSettings": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Updates the user settings",
                "operationId": "UpdateUserSettings",
                "requestBody": {
                    "required": true,
                    "description": "Input model for UpdateUserSettings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateSettingsApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GetOrganizationSignGroups": {
            "post": {
                "tags": [
                    "Sign Groups"
                ],
                "summary": "Retrive the organization sign groups",
                "operationId": "GetOrganizationSignGroups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationSignGroupApiModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },


        "/CreateOrganizationSignGroup": {
            "post": {
                "tags": [
                    "Sign Groups"
                ],
                "summary": "Creates a new organization SignGroup",
                "operationId": "CreateOrganizationSignGroup",
                "requestBody": {
                    "required": true,
                    "description": "Input model for CreateOrganizationSignGroup",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationSignGroupApiModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                }
                            }
                        }
                    }
                }
            }
        },


        "/GetAuthenticationProviders": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Retrive the organization authentication providers. Requires organization administrator rights",
                "operationId": "GetAuthenticationProviders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetAuthenticationProvidersResult"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GetCompletedAuditTrail": {
            "post": {
                "tags": [
                    "Completed Envelope Download"
                ],
                "summary": "Retrive the entries for a completed envelope audit trail",
                "operationId": "GetCompletedAuditTrail",
                "parameters": [{
                    "name": "envelopeId",
                    "in": "query",
                    "description": "Id of the envelope",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuditTrailEntryApiModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {


            "ResetSignatureTypeApiModel" : {
                "type": "object",
                "required": ["EnvelopeId","SignatureType"],
                "properties": {
                    "EnvelopeId": {
                        "description": "The envelope identifier",
                        "type": "string"
                    },
                    "ByIndex": {
                        "description": "The index of the recipient for which the signatures will be reset",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/FindRecipientByIndexApiModel"
                    },
                    "ByEmail": {
                        "description": "The email of the recipient for which the signatures will be reset",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/FindRecipientByEmailApiModel"
                    },
                    "ByIdentifier": {
                        "description": "The email of the recipient for which the signatures will be reset",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/FindRecipientByIdentifierApiModel"
                    },
                    "SignatureType":{
                        "description": "The email of the recipient for which the signatures will be reset",
                        "type": "object",
                        "required": "true",
                        "$ref": "#/components/schemas/ResetSignatureType"
                    }
                }
			},


			"UnlockConcurrentRecipientApiModel" : {
                "type": "object",
                "properties": {
                    "EnvelopeId": {
                        "description": "The envelope identifier",
                        "type": "string"
                    },
                    "RecipientEmail": {
                        "description": "Email of the recipient which has locked the envelope",
                        "type": "string"
                    }
                }
			},

            "GetAuthenticationProvidersResult" :{
                "description": "GetAuthenticationProvidersResult",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuthenticationProviderResultApiModel"
                        }
                    }
                }
            },

            "AuthenticationProviderResultApiModel": {
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "The name of the authentication provider",
                        "type": "string"
                    },
                    "Identifier": {
                        "description": "The identifier",
                        "type": "string"
                    }
                }
            },

            "AddDocumentsOrRecipientsToDraftApiModel": {
                "type": "object",
                "properties": {
                    "DraftId": {
                        "description": "Draft identifier",
                        "type": "string"
                    },
                    "Documents": {
                        "description": "Documents which will be added to the draft",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentApiModel"
                        }
                    },
                    "Recipients": {
                        "description": "Recipients which will be added to the draft",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientApiModel"
                        }
                    },
                    "DocumentParsingOptions" :{
                        "description": "Document parsing options",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentParseOptionApiModel"
                    }
                }
            },

            "AddDocumentsOrRecipientsToTemplateApiModel": {
                "type": "object",
                "properties": {
                    "TemplateId": {
                        "description": "Template identifier",
                        "type": "string"
                    },
                    "Documents": {
                        "description": "Documents which will be added to the template",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentApiModel"
                        }
                    },
                    "Recipients": {
                        "description": "Recipients which will be added to the template",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientApiModel"
                        }
                    },
                    "DocumentParsingOptions" :{
                        "description": "Document parsing options",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentParseOptionApiModel"
                    }
                }
            },

            "BaseUpdateApiModel": {
                "type": "object",
                "properties": {
                    "Messages":{
                        "description": "Set the envelope messages",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageApiModel"
                        }
                    },
                    "Language": {
                        "description": "Language for email notifications",
                        "type": "string"
                    },
                    "Metadata": {
                        "description": "Metadata for the envelope/draft/template",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4000
                    },
                    "ExpirationDays": {
                        "description": "Sets the expiration day for envelope in days",
                        "type": "number"
                    },
                    "ExpirationDateAbsolute" :{
                        "description": "Sets the absolute expiration day as UTC timestamp",
                        "type": "string"
                    },

                    "ReminderOptions": {
                        "description": "Enable reminders and set the reminder options",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/ReminderOptionsApiModel"
                    },
                    "Name": {
                        "description": "Set the name to identify the envelope/draft/template",
                        "type": "string"
                    },
                    "DisableSignersShouldReceiveFinishedDocument": {
                        "description": "Set to true to disable sending completed documents to CC recipients",
                        "type": "boolean"
                    },
                    "OverwriteCallbackUrls": {
                        "description": "Overwrite the envelope callback URLs. If this is not set, the default configured UI values will be used",
                        "type": "object",
                        "$ref": "#/components/schemas/CallbackApiModel"
                    },
                    "OverwriteSignSettings": {
                        "description": "Overwrite the signing settings",
                        "type": "object",
                        "$ref": "#/components/schemas/SignSettingsApiModel"
                    },
                    "OverwriteDisclosureAgreement": {
                        "description": "Overwrites the disclosure agreements setting",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/DisclosureAgreementApiModel"
                    },
                    "AllowRecipientDelegation": {
                        "description": "Set to true to enable recipient delegation",
                        "type": "boolean"
                    },
                    "CertifyDocumentsBeforeSending": {
                        "description": "Flag to certify the PDF documents before sending them to signing",
                        "type": "boolean"
                    },
                    "PreventFormFieldEditOnEnvelopeCompletion": {
                        "description": "If enabled, the form fields in the PDF documents will be marked as read only to prevent editing on envelope completion",
                        "type": "boolean"
                    },
                    "EnableBatchSign": {
                        "description": "Flag to enable support for batch signing. Batch signing allows the signer to sign multiple signature fields with a single click",
                        "type": "boolean"
                    },
                    "DisableRecipientNotifications": {
                        "description": "Flag which allows to disable ALL recipient notifications",
                        "type": "boolean"
                    },
                    "DocumentTimestampType": {
                        "description": "Set the type of timestamping for serial envelope. To be set only if EnableDocumentTimestamp is enabled and the the of envelope is serial",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentTimestampTypeApi"
                    }

                }
            },

            "AccountLoginTypeApi" :{
                "description": "Specifies the type of account login",
                "type": "number",
                "enum": [
                    "0",
                    "1"
                ],
                "x-enum-values": [{
                    "numericValue": "0",
                    "identifier": "None"
                }, {
                    "numericValue": "0",
                    "identifier": "Password"
                }, {
                    "numericValue": "1",
                    "identifier": "OIDC_SAML"
                }],
                "x-ms-enum": []
            },

            "DocumentTimestampTypeApi": {
                "description": "Specifies the type of timestamping to be done for serial envelopes  : 1 - Recipient, 2 - Envelope",
                "type": "number",
                "enum": [
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                    "numericValue": "0",
                    "identifier": "None"
                }, {
                    "numericValue": "1",
                    "identifier": "Recipient"
                }, {
                    "numericValue": "2",
                    "identifier": "Envelope"
                }],
                "x-ms-enum": []
            },

            "UpdateTemplateApiModel": {
                "description": "Type which describes the template update settings. Everything is optional, you should only sent the setting values that need to be updated",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BaseUpdateApiModel",
                    "type": "object"
                }],
                "properties": {
                    "TemplateId": {
                        "description": "The identifier of the template which will be updated",
                        "type": "string"
                    },

                    "IsSharedTemplate": {
                        "description": "Flag which determines if the template is shared with the organization users",
                        "type": "boolean"
                    }
                }
            },

            "UpdateDraftApiModel": {
                "description": "Type which describes the draft update settings. Everything is optional, you should only sent the setting values that need to be updated",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BaseUpdateApiModel",
                    "type": "object"
                }],
                "properties": {
                    "DraftId": {
                        "description": "The identifier of the draft which will be updated",
                        "type": "string"
                    }
                }
            },
            "MessageApiModel":{
                "description": "Type which describes a envelope/organization message model",
                "type": "object",
                "properties": {
                    "Subject": {
                        "description": "The subject of the email message",
                        "type": "string"
                    },
                    "Message": {
                        "description": "The subject of the email message",
                        "type": "string"
                    },
                    "Language":{
                        "description": "The language of the message",
                        "type": "string"
                    }
                }
            },
            "UserUpdateSettingsApiModel": {
                "description": "Type which describes user settings. Everything is optional, you should only sent the setting values that need to be updated",
                "type": "object",
                "properties": {
                    "FirstName": {
                        "description": "The user's first name",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "The user's last name",
                        "type": "string"
                    },
                    "TimezoneIdentifier": {
                        "description": "The timezone identifier",
                        "type": "string"
                    },
                    "UserInterfaceLanguage": {
                        "description": "The user interface language. Call /GetUserInterfaceLanguages to retrieve all supported languages",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The user's phone number",
                        "type": "string"
                    },
                    "JobTitle": {
                        "description": "The user's job title",
                        "type": "string"
                    },
                    "DefaultDraftLanguage": {
                        "description": "The default language for new drafts",
                        "type": "string"
                    },
                    "DefaultSignatureType": {
                        "description": "The default signature type for this user",
                        "type": "string"
                    },
                    "DefaultForSendFinishedDocumentsToAllSigners": {
                        "description": "Default value for sending finished documents to signers for new drafts",
                        "type": "boolean"
                    },
                    "DefaultForEnableBatchSigning": {
                        "description": "Default value for enabling batch signing for new drafts",
                        "type": "boolean"
                    },
                    "DefaultForAllowRecipientDelegation": {
                        "description": "Default value for recipient delegation used for new drafts",
                        "type": "boolean"
                    },
                    "DefaultForPreventFormFieldEditOnEnvelopeCompletion": {
                        "description": "Default value for preventing form field editing on completion used for new drafts",
                        "type": "boolean"
                    },
                    "NotificationRecipientOpenedSignStep": {
                        "description": "Enable/disable notifications for recipient opening the SignStep",
                        "type": "boolean"
                    },
                    "NotificationRecipientSigned": {
                        "description": "Enable/disable notifications for recipient signing and finishing a SignStep",
                        "type": "boolean"
                    },
                    "NotificationEnvelopeCompleted": {
                        "description": "Enable/disable notifications for a envelope being completed",
                        "type": "boolean"
                    },
                    "NotificationRecipientRejected": {
                        "description": "Enable/disable notifications for recipient rejecting to sign a document",
                        "type": "boolean"
                    },
                    "SignatureImageBase64": {
                        "description": "The user's signature image sent as Base64 encoded string",
                        "type": "string"
                    },
                    "UserPictureBase64": {
                        "description": "The user's image sent as a Base64 encoded string",
                        "type": "string"
                    }
                }
            },

            "BaseDocumentApiInput": {
                "description": "",
                "type": "object",
                "required": ["Documents", "Recipients"],
                "properties": {
                    "Messages":{
                        "description": "Set the messages",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageApiModel"
                        }
                    },
                    "Language": {
                        "description": "Language for email notifications. If left empty, the default draft language setting will be used",
                        "type": "string"
                    },
                    "Metadata": {
                        "description": "Metadata for the envelope/draft/template",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4000
                    },
                    "ExpirationDays": {
                        "description": "Sets the expiration day for envelope as number of days.",
                        "type": "number"
                    },
                    "ExpirationDateAbsolute" :{
                        "description": "Sets the expiration date for envelope as a UTC timestamp.",
                        "type": "string"
                    },
                    "Documents": {
                        "description": "Set the PDF documents which will be signed",
                        "type": "object",
                        "required": true,
                        "$ref": "#/components/schemas/DocumentApiModel"
                    },
                    "Recipients": {
                        "description": "Set the recipients",
                        "type": "object",
                        "required": true,
                        "$ref": "#/components/schemas/RecipientApiModel"
                    },
                    "ReminderOptions": {
                        "description": "Enable reminders and set the reminder options",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/ReminderOptionsApiModel"
                    },
                    "EnvelopeType" : {
                        "description": "The type of the envelope",
                        "$ref": "#/components/schemas/EnvelopeTypeApi"
                    },
                    "Name": {
                        "description": "Set the name to identify the envelope/draft/template. If not set, the name 'Please sign this document' will be used",
                        "type": "string"
                    },
                    "DisableSignersShouldReceiveFinishedDocument": {
                        "description": "Set to true to disable sending finished documents to CC recipients",
                        "type": "boolean"
                    },
                    "OverwriteCallbackUrls": {
                        "description": "Overwrite the envelope callback URLs. If this is not set, the default configured UI values will be used",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/CallbackApiModel"
                    },
                    "OverwriteSignSettings": {
                        "description": "Overwrite the signing settings",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/SignSettingsApiModel"
                    },
                    "OverwriteDisclosureAgreement": {
                        "description": "Overwrites the disclosure agreements setting",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/DisclosureAgreementApiModel"
                    },
                    "AllowRecipientDelegation": {
                        "description": "Set to true to enable recipient delegation",
                        "type": "boolean"
                    },
                    "CertifyDocumentsBeforeSending": {
                        "description": "Flag to certify the PDF documents before sending them to signing",
                        "type": "boolean"
                    },
                    "PreventFormFieldEditOnEnvelopeCompletion": {
                        "description": "If enabled, the form fields in the PDF documents will be marked as read only to prevent editing on envelope completion",
                        "type": "boolean"
                    },
                    "EnableBatchSign": {
                        "description": "Flag to enable support for batch signing. Batch signing allows the signer to sign multiple signature fields with a single click",
                        "type": "boolean"
                    },
                    "FileAccessMode": {
                        "description": "Set file access mode",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/FileAccessModeApi"
                    },
                    "CustomFileAccess": {
                        "description": "Set the custom file access mode",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileAccessApiModel"
                        }
                    },
                    "DocumentTimestampType": {
                            "description": "Set the type of timestamping for serial envelope. To be set only if EnableDocumentTimestamp is enabled and the the of envelope is serial",
                            "type": "object",
                            "$ref": "#/components/schemas/DocumentTimestampTypeApi"
                        }

                    }
            },
            

            "UpdateDraftMetadataApiModel": {
                "description": "UpdateDraftMetadataApiModel type definition",
                "type": "object",
                "required": ["DraftId","Metadata"],
                "properties": {
                    "DraftId": {
                        "description": "The id of the draft",
                        "type": "string"
                    },
                    "Metadata": {
                        "description": "The new metadata value",
                        "type": "string"
                    }
                }
            },

            "ItemResultApiModel": {
                "description": "ItemResultApiModel type definition",
                "type": "object",
                "properties": {
                    "Id": {
                        "description": "The id of the envelope",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the envelope",
                        "type": "string"
                    },
                    "LastUpdatedDateUTC": {
                        "description": "The last update date for draft, timestamp is UTC",
                        "type": "string"
                    }
                }
            },

            "DraftItemResultApiModel": {
                "description": "DraftItemResultApiModel type definition",
                "type": "object",
                "properties": {
                    "Id": {
                        "description": "The id of the draft",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the draft",
                        "type": "string"
                    },
                    "LastUpdatedDateUTC": {
                        "description": "The last update date for draft, timestamp is UTC",
                        "type": "string"
                    },
                    "AllowEditIncognitoMode" :{
                        "description": "Flag which shows if the draft can be opened in incognito mode",
                        "type": "boolean"
                    }
                }
            },

            "EnvelopeFromTemplateApiModel": {
                "description": "EnvelopeFromTemplateApiModel type definition",
                "type": "object",
                "required": ["TemplateId"],
                "properties": {
                    "TemplateId": {
                        "description": "The id of the template",
                        "type": "string"
                    },
                    "ReplaceRecipients": {
                        "description": "The recipients to replace",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateReplaceRecipientApiModel"
                        }
                    },
                    "ReplaceFormFields": {
                        "description": "The form fields ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateReplaceFormFieldsApiModel"
                        }
                    }
                }
            },

            "TemplateReplaceFormFieldsApiModel": {
                "description": "TemplateReplaceFormFieldsApiModel type definition",
                "type": "object",
                "required": ["FindDocumentByIndex","FindDocumentByName","FormFieldValues"],
                "properties": {

                    "FindDocumentByIndex": {
                        "description": "The index of the document",
                        "type": "number"
                    },
                    "FindDocumentByName": {
                        "description": "The name of the document",
                        "type": "string"
                    },
                    "FormFieldValues": {
                        "description": "Form field values",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OverwriteFieldValueApiModel"
                        }
                    }
                }
            },

            "EnvelopeToSignResultApiModel": {
                "description": "EnvelopeToSignResultApiModel type definition",
                "type": "object",
                "properties": {
                    "AccessCode": {
                        "description": "The access code for the document",
                        "type": "string"
                    },
                    "EnvelopeName": {
                        "description": "The name of the envelope",
                        "type": "string"
                    },
                    "SenderName": {
                        "description": "The name of the envelope sender",
                        "type": "string"
                    },
                    "IsEnvelopeSender" :{
                        "description": "Flag that determines if the user is also the envelope sender",
                        "type": "boolean"
                    }
                }
            },

            "NewUserApiModel": {
                "description": "NewUserApiModel type definition",
                "type": "object",
                "required": ["FirstName","LastName","Email","Role","PhoneNumber"],
                "properties": {
                    "FirstName": {
                        "description": "The user first name",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "The user last name",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The user email address",
                        "type": "string"
                    },
                    "Role": {
                        "description": "Set the user role",
                        "$ref": "#/components/schemas/UserRoleApiType"
                    },
                    "CustomRoleName" :{
                        "description": "If Role = Custom, set the name of the custom user role. Case insensitive",
                        "type": "string"
                    },
                    "JobTitle": {
                        "description": "The user job title",
                        "type": "string",
                        "default": ""
                    },
                    "PhoneNumber": {
                        "description": "The user phone number",
                        "type": "string",
                        "default": ""
                    },
                    "UILanguage": {
                        "description": "The localization identifier for the user UI language, format is ISO 639-1",
                        "type": "string",
                        "default": "en-US"
                    },
                    "DefaultDraftLanguage": {
                        "description": "The localization identifier used by default for the drafts",
                        "type": "string",
                        "default": "en-US"
                    },
                    "NotificationRecipientSigned": {
                        "description": "Flag to enable the recipient signed email notification",
                        "type": "boolean",
                        "default": "false"
                    },
                    "NotificationRecipientOpenedEnvelope": {
                        "description": "Flag to enable the opened envelope email notification",
                        "type": "boolean",
                        "default": "false"
                    },
                    "NotificationEnvelopeCompleted": {
                        "description": "Flag to enable the envelope completed email notification",
                        "type": "boolean",
                        "default": "false"
                    },
                    "NotificationRecipientRejected": {
                        "description": "Flag to enable the recipient rejected email notification",
                        "type": "boolean",
                        "default": false
                    },
                    "DateTimeFormatId": {
                        "description": "The identifier for the date time format used by the user",
                        "type": "number",
                        "default": "1"
                    },
                    "TimeZoneId": {
                        "description": "The identifier for the time zone format used by the user",
                        "type": "string",
                        "default": "UTC"
                    },
                    "SignatureImage": {
                        "description": "A BASE64 encoded image in JPEG format that will be used as the user's signature image",
                        "type": "string",
                        "default": ""
                    },
                    "Picture": {
                        "description": "A BASE64 encoded image in JPEG format that will be used as the user's image",
                        "type": "string",
                        "default": ""
                    },
                    "AccountLoginType":{
                        "description": "Set the user login type",
                        "$ref": "#/components/schemas/AccountLoginTypeApi"
                    }
                }
            },

            "UserInvitationApiModel": {
                "description": "Type description for UserInvitation model",
                "type": "object",
                "required": ["FirstName","LastName","Email","Role"],
                "properties": {
                    "FirstName": {
                        "description": "The user's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "LastName": {
                        "description": "The user's last name",
                        "type": "string",
                        "example": "Fonesca"
                    },
                    "Email": {
                        "description": "The user's email address",
                        "type": "string",
                        "example": "test@test.com"
                    },
                    "Role": {
                        "description": "Set the user role",
                        "$ref": "#/components/schemas/UserRoleApiType"
                    },
                    "CustomRoleName" :{
                        "description": "If Role = Custom, set the name of the custom user role. Case insensitive",
                        "type": "string"
                    }
                }
            },

            "RecipientResultApiModel":{
                "description": "Type which describes the recipient result information",
                "type": "object",
                "properties": {
                 
                    "Identifier":{
                        "description": "The recipient unique identifier",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The recipient's email",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The recipient's name",
                        "type": "string"
                    },
                    "Index": {
                        "description": "The recipient's name",
                        "type": "number"
                    },
                    "PersonalMessage": {
                        "description": "The personal message",
                        "type": "string"
                    },
                    "RecipientAuthenticationMethods": {
                        "description": "The recipient authentication methods",
                        "$ref": "#/components/schemas/RecipientAuthenticationApiModel"
                    },
                    "RecipientType": {
                        "description": "The recipient types",
                        "$ref": "#/components/schemas/RecipientTypeApi"
                    },
                    "AutomaticSignerProfileIdentifier":{
                        "description": "The automatic signer profile identifier. Only set if RecipientType is AutomaticSigner",
                        "type": "string"
                    },
                    "SignNotificationChannel":{
                        "description": "The notification channel for this recipient",
                        "$ref": "#/components/schemas/SignNotificationChannelTypeApi"
                    },
                    "SignGroup":{
                        "description": "The name of he sign group this recipient is a part of",
                        "type": "string"
                    },
                    "Language":{
                        "description": "The language of the recipient",
                        "type": "string"
                    },
                    "PhoneNumber":{
                        "description": "Sets the recipient phone number",
                        "type": "string"
                    }
                }
            },

            "EnvelopeRecipientResultApiModel": {
                "description": "The type which describes the recipient information",
                "type": "object",
                "properties": {

                    "Identifier":{
                        "description": "The recipient unique identifier",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The recipient email address",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The recipient name",
                        "type": "string"
                    },
                    "Language":{
                        "description": "The recipient language",
                        "type": "string"
                    },
                    "Index": {
                        "description": "The recipient index",
                        "type": "number"
                    },
                    "PersonalMessage": {
                        "description": "The personal message",
                        "type": "string"
                    },
                    "RecipientAuthenticationMethods": {
                        "description": "The recipient authentication methods",
                        "$ref": "#/components/schemas/RecipientAuthenticationApiModel"
                    },
                    "RecipientType": {
                        "description": "The recipient types",
                        "$ref": "#/components/schemas/RecipientTypeApi"
                    },
                    "AutomaticSignerProfileIdentifier":{
                        "description": "The automatic signer profile identifier. Only set if RecipientType is AutomaticSigner",
                        "type": "string"
                    },
                    "SignNotificationChannel":{
                        "description": "The notification channel for this recipient",
                        "$ref": "#/components/schemas/SignNotificationChannelTypeApi"
                    },
                    "Status": {
                        "description": "The current status of the recipient",
                        "$ref": "#/components/schemas/RecipientStatusApi"
                    },
                    "SignGroup":{
                        "description": "The name of he sign group this recipient is a part of",
                        "type": "string"
                    },
                    "AccessCode": {
                        "description": "The access code of the recipient",
                        "type": "string"
                    },
                    "SigningUrl": {
                        "description": "The url to which the user should be redirected to sign",
                        "type": "string"
                    },
                    "HasBeenDelegated": {
                        "description": "Flag which indicates if the recipient has been delegated",
                        "type": "boolean"
                    },
                    "RejectionMessage": {
                        "description": "The rejection message of the recipient (only when the SignStep is rejected)",
                        "type": "string"
                    },
                    "Attachments":{
                        "description": "The completed attachments",
                        "$ref": "#/components/schemas/CompletedAttachmentApiModel"
                    },
                    "LockedDate":{
                        "description": "The date at which this signer locked the envelope",
                        "type": "string",
                        "format":"date-time"
                    },
                    "FinishedDate":{
                        "description": "The date at which the signer finished signing",
                        "type": "string",
                        "format":"date-time"
                    }
                }
            },

            "DocumentResultApiModel": {
                "description": "Type description for DocumentResultApiModel",
                "type": "object",
                "properties": {

                    "Filename": {
                        "description": "Name of the file",
                        "type": "string"
                    },
                    "Index": {
                        "description": "Index of the file",
                        "type": "string"
                    }
                }
            },

            "EnvelopeDetailsResultApiModel": {
                "description": "Model for envelope detail result",
                "type": "object",
                "properties": {
                    "Documents": {
                        "description": "The envelope documents",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentResultApiModel"
                        }
                    },
                    "Recipients": {
                        "description": "The envelope recipients",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnvelopeRecipientResultApiModel"
                        }
                    },
                    "Status": {
                        "description": "The status of the envelope",
                        "$ref": "#/components/schemas/EnvelopeStatusTypeApi"
                    },
                    "EnvelopeType" : {
                        "description": "The type of the envelope",
                        "$ref": "#/components/schemas/EnvelopeTypeApi"
                    },
                    "SentDateUTC": {
                        "description": "The date at which the envelope was sent for signing",
                        "type": "string",
                        "format": "date-time"
                    },
                    "SentFormattedDateUTC": {
                        "description": "The date at which the envelope was sent for signing in ISO 8601 format",
                        "type": "string"
                    },
                    "ExpirationDateUTC": {
                        "description": "The expiration date of the envelope",
                        "type": "string"
                    },
                    "ExpirationFormattedDateUTC": {
                        "description": "The expiration date of the envelope in ISO 8601 format",
                        "type": "string"
                    },
                    "LastModifiedDateUTC": {
                        "description": "The last modification date of the envelope",
                        "type": "string"
                    },
                    "LastModifiedFormattedDateUTC": {
                        "description": "The last modification date of the envelope in ISO 8601 format",
                        "type": "string"
                    },
                    "EnvelopeId": {
                        "description": "The id of the envelope",
                        "type": "string"
                    },
                    "ReminderOptions": {
                        "description": "Enable reminders and set specific options",
                        "$ref": "#/components/schemas/ReminderOptionsApiModel"
                    },
                    "Name": {
                        "description": "The name of the envelope/draft/template",
                        "type": "string"
                    },
                    "ClientRedirectUrl": {
                        "description": "The URL to redirect to after the signer finishes the document",
                        "type": "string"
                    },
                    "NotificationLanguage": {
                        "description": "Language for email notifications.If left empty, the default language set by user will be used",
                        "type": "string"
                    },
                    "DisableRecipientNotifications":{
                        "description": "Flag that determines if recipient notifications are disabled",
                        "type": "boolean"
                    },
                    "SignersShouldReceiveFinishedDocument": {
                        "description": "Flag which shows if the signers will also received the finished documents",
                        "type": "boolean"
                    },
                    "CertifyDocuments": {
                        "description": "Flag which shows if the documents were certified before sending",
                        "type": "boolean"
                    },
                    "Metadata": {
                        "description": "The metadata for envelope/draft/template",
                        "type": "string"
                    },
                    "DocumentTimestampType": {
                        "description": "Set the type of timestamping for serial envelope. To be set only if EnableDocumentTimestamp is enabled and the the of envelope is serial",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentTimestampTypeApi"
                    }

                }
            },

            "EnvelopeApiModel": {
                "description": "EnvelopeApiModel definition",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BaseDocumentApiInput",
                    "type": "object"
                }],
                "properties": {
                    "DisableRecipientNotifications": {
                        "description": "Set this to true to disable ALL recipient notifications",
                        "type": "boolean"
                    }
                }
            },

            "SendEnvelopeResultApiModel": {
                "description": "Return type description for SendEnvelope",
                "type": "object",
                "properties": {
                    "EnvelopeId": {
                        "description": "The envelope identifier",
                        "type": "string"
                    },
                    "RecipientAccess": {
                        "description": "SignStep access information for recipient(s)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientAccessCodeApiModel"
                        }
                    }
                }
            },

            "RecipientAccessCodeApiModel": {
                "description": "Access code for recipient",
                "type": "object",
                "properties": {
                    "RecipientEmail": {
                        "description": "Email address of the recipient",
                        "type": "string"
                    },
                    "AccessCode": {
                        "description": "The access code for the recipient",
                        "type": "string"
                    },
                    "SigningUrl" :{
                        "description": "The signing url",
                        "type": "string"
                    },
                    "SignStepIdentifier" :{
                        "description": "The SignStep identifier",
                        "type": "string"
                    }
                }
            },

            "DraftApiModel": {
                "description": "Create new draft type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BaseDocumentApiInput",
                    "type": "object"
                }],
                "properties": {
                    "EnableEditIncognitoMode": {
                        "description": "Set to true to allow editing the draft in incognito mode, see https://bulksign.com/docs/iframe.htm for example",
                        "type": "boolean"
                    }
                }
            },

            "TemplateApiModel": {
                "description": "Create new template type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/BaseDocumentApiInput",
                    "type": "object"
                }],
                "properties": {
                    "IsSharedTemplate": {
                        "description": "Boolean flag to set if the template is shared or not",
                        "type": "boolean"
                    }
                }
            },

            "DocumentApiModel": {
                "description": "Defines a document to sign",
                "type": "object",
                "required": ["Index","FileName","FieldAssignments"],
                "properties": {
                    "FileContentByteArray": {
                        "description": "Type describes a binary file content",
                        "type": "object",
                        "$ref": "#/components/schemas/FileContentByteArray"
                    },
                    "FileContentBase64String": {
                        "description": "Type describes a Base64 encoded file",
                        "type": "object",
                        "$ref": "#/components/schemas/FileContentBase64String"
                    },
                    "FileIdentifier": {
                        "description": "Type describes a file identifier",
                        "type": "object",
                        "$ref": "#/components/schemas/FileIdentifier"
                    },
                    "FileNetworkShare": {
                        "description": "Type describes a network share file path. Can ONLY be used with Bulksign OnPremise version",
                        "type": "object",
                        "$ref": "#/components/schemas/FileNetworkShare"
                    },
                    "Index": {
                        "description": "The index of the recipient. In serial signing mode this represents the position at which he signs the document",
                        "type": "number"
                    },
                    "FileName": {
                        "description": "The name of the file",
                        "type": "string"
                    },
                    "FieldAssignments": {
                        "description": "Assign form fields to recipients",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssignmentApiModel"
                        }
                    },
                    "NewSignatures": {
                        "description": "Add new signature fields",
                        "type": "object",
                        "$ref": "#/components/schemas/NewSignatureApiModel"
                    },
                    "NewAnnotations": {
                        "description": "Add new annotations ",
                        "type": "object",
                        "$ref": "#/components/schemas/NewAnnotationApiModel"
                    },
                    "NewTextBoxes": {
                        "description": "Add new text boxes to document ",
                        "type": "object",
                        "$ref": "#/components/schemas/NewTextBoxApiModel"
                    },
                    "NewComboBoxes": {
                        "description": "Add new text boxes to document ",
                        "type": "object",
                        "$ref": "#/components/schemas/NewComboBoxApiModel"
                    },
                    "NewCheckBoxes": {
                        "description": "Add new checkboxes to document ",
                        "type": "object",
                        "$ref": "#/components/schemas/NewCheckBoxApiModel"
                    },
                    "OverwriteValues": {
                        "description": "Set values for form fields",
                        "type": "object",
                        "$ref": "#/components/schemas/OverwriteFieldValueApiModel"
                    }
                }
            },

            "FileIdentifier": {
                "description": "Type which describes a file identifier obtained from AnalyzeFile request",
                "type": "object",
                "required": ["Identifier"],
                "properties": {
                    "Identifier": {
                        "description": "The file identifier",
                        "type": "string"
                    }
                }
            },

            "FileNetworkShare": {
                "description": "Type which describes a internal network share file. This can ONLY be used with Bulksign OnPremise version",
                "type": "object",
                "required": ["Path"],
                "properties": {
                    "Path": {
                        "description": "The full path of the shared file",
                        "type": "string"
                    }
                }
            },

            "FileContentByteArray": {
                "description": "Type which describes a binary file content",
                "type": "object",
                "required": ["ContentBytes"],
                "properties": {
                    "ContentBytes": {
                        "description": "The file's content",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },

            "FileContentBase64String": {
                "description": "Type which describes a BASE64 encoded file content",
                "type": "object",
                "required": ["FileContent"],
                "properties": {
                    "FileContent": {
                        "description": "The BASE64 encoded file content",
                        "type": "string"
                    }
                }
            },

            "AnalyzedFileResultApiModel": {
                "description": "AnalyzeFile return type",
                "type": "object",
                "properties": {
                    "NumberOfPages" :{
                        "description": "Number of pages of the document",
                        "type": "number"
                    },
                    "Fields": {
                        "description": "Parsed fields ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormFieldResultApiModel"
                        }
                    }
                }
            },

            "NewTextBoxApiModel": {
                "description": "Type which describes a new TextBox which will be added to the document",
                "type": "object",
                "required": ["Height","Width","Top","Left","PageIndex","AssignedToRecipientEmail","Id"],
                "properties": {
                    "Height": {
                        "description": "The height of the TextBox field",
                        "type": "number"
                    },
                    "Width": {
                        "description": "The width of the TextBox field",
                        "type": "number"
                    },
                    "Top": {
                        "description": "Top position for TextBox field",
                        "type": "number"
                    },
                    "Left": {
                        "description": "Left position for TextBox field",
                        "type": "number"
                    },
                    "PageIndex": {
                        "description": "Index of the page where TextBox field will be applied",
                        "type": "number"
                    },
                    "AssignedToRecipientEmail": {
                        "description": "The recipient identifier to which this new TextBox field will be assigned to",
                        "type": "string"
                    },
                    "Text": {
                        "description": "Text which will be shown in the TextBox field",
                        "type": "string"
                    },
                    "Id": {
                        "description": "The id of the field",
                        "type": "string"
                    },
                    "IsRequired": {
                        "description": "Flag which determines if form filling the TextBox is required",
                        "type": "boolean"
                    }
                }
            },

            "NewComboBoxApiModel": {
                "description": "Type which describes a new ComboBox which will be added to the document",
                "type": "object",
                "required": ["Height","Width","Top","Left","PageIndex","AssignedToRecipientEmail","Id","Items"],
                "properties": {
                    "Height": {
                        "description": "The height of the ComboBox field",
                        "type": "number"
                    },
                    "Width": {
                        "description": "The width of the ComboBox field",
                        "type": "number"
                    },
                    "Top": {
                        "description": "Top position for ComboBox field",
                        "type": "number"
                    },
                    "Left": {
                        "description": "Left position for ComboBox field",
                        "type": "number"
                    },
                    "PageIndex": {
                        "description": "Index of the page where ComboBox field will be applied",
                        "type": "number"
                    },
                    "AssignedToRecipientEmail": {
                        "description": "The recipient identifier to which this new ComboBox field will be assigned to",
                        "type": "string"
                    },
                    "Id": {
                        "description": "The id of the field",
                        "type": "string"
                    },
                    "Items": {
                        "description": "",
                        "type": "string"
                    },
                    "SelectedItem": {
                        "description": "The value which is selected",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },

            "NewCheckBoxApiModel": {
                "description": "Type which describes a new CheckBox which will be added to the document",
                "type": "object",
                "required": ["Height","Width","Top","Left","PageIndex","AssignedToRecipientEmail","IsChecked"],
                "properties": {
                    "Height": {
                        "description": "The height of the CheckBox field",
                        "type": "number"
                    },
                    "Width": {
                        "description": "The width of the CheckBox field",
                        "type": "number"
                    },
                    "Top": {
                        "description": "Top position for CheckBox field",
                        "type": "number"
                    },
                    "Left": {
                        "description": "Left position for CheckBox field",
                        "type": "number"
                    },
                    "PageIndex": {
                        "description": "Index of the page where CheckBox field will be applied",
                        "type": "number"
                    },
                    "AssignedToRecipientEmail": {
                        "description": "The recipient identifier to which this new CheckBox field will be assigned to",
                        "type": "string"
                    },
                    "Id": {
                        "description": "The id of the field",
                        "type": "string"
                    },
                    "IsChecked": {
                        "description": "Sets if the checkbox is checked or not",
                        "type": "boolean"
                    },
                    "IsRequired": {
                        "description": "Flag which determines if form filling the CheckBox is required",
                        "type": "boolean"
                    }
                }
            },

            "NewAnnotationApiModel": {
                "description": "Type which annotations",
                "type": "object",
                "required": ["Height","Top","Left","PageIndex","FontSize","Type"],
                "properties": {
                    "Height": {
                        "description": "The height of the annotation field",
                        "type": "number"
                    },
                    "Top": {
                        "description": "Top position for annotation field",
                        "type": "number"
                    },
                    "Left": {
                        "description": "Left position for annotation field",
                        "type": "number"
                    },
                    "PageIndex": {
                        "description": "Index of the page where annotation field will be applied",
                        "type": "number"
                    },
                    "FontSize": {
                        "description": "Size of the font",
                        "type": "number"
                    },
                    "Type": {
                        "description": "Type of the annotation",
                        "type": "object",
                        "$ref": "#/components/schemas/AnnotationTypeApi"
                    },
                    "CustomText": {
                        "description": "Annotation text. Used only if the annotation type is set to Custom",
                        "type": "string"
                    }
                }
            },

            "NewSignatureApiModel": {
                "description": "Type which describes a new signature field",
                "type": "object",
                "required": ["Height","Width","Top","Left","PageIndex","AssignedToRecipientEmail","SignatureType"],
                "properties": {
                    "Height": {
                        "description": "Height of the signature field",
                        "type": "number"
                    },
                    "Width": {
                        "description": "Width of the signature field",
                        "type": "number"
                    },
                    "Top": {
                        "description": "Top position for signature field",
                        "type": "number"
                    },
                    "Left": {
                        "description": "Left position for signature field",
                        "type": "number"
                    },
                    "PageIndex": {
                        "description": "Index of the PDF page to which the new signature will be added",
                        "type": "number"
                    },
                    "AssignedToRecipientEmail": {
                        "description": "The recipient identifier to which this new signature field will be assigned to.",
                        "type": "string"
                    },
                    "SignatureType": {
                        "description": "The signature type",
                        "type": "object",
                        "$ref": "#/components/schemas/SignatureTypeApi"
                    },
                    "StampSignatureConfiguration" :
                    {
                        "description": "Configuration for stamp signature. Only used if SignatureType = Stamp",
                        "type": "object",
                        "$ref": "#/components/schemas/StampSignatureConfigurationApiModel"
                    },
                    "RemoteSignatureName" :{
                        "description": "The name of the remote signature. Only used if SignatureType = RemoteSigningProvider",
                        "type": "number"
                    }
                }
            },

            "StampSignatureConfigurationApiModel" :{
                "description": "Type which describes the condiguration for a Stamp signature",
                "type": "object",
                "required": ["AssignedToRecipientEmail"],
                "properties": {
                    "ImprintName": {
                        "description": "Name of the imprint to use",
                        "type": "string"
                    },
                    "StampName": {
                        "description": "Name of the stano to use. Is useable only when StampType = StampSignatureTypeApi.PredefinedStamp",
                        "type": "string"
                    },
                    "StampType": {
                        "description": "The type of stamp signature",
                        "type": "object",
                        "$ref": "#/components/schemas/SignatureTypeApi"
                    }
                }
            },

            "AssignmentApiModel": {
                "description": "Type which describes field assignment",
                "type": "object",
                "required": ["AssignedToRecipientEmail","Fields","Signatures"],
                "properties": {
                    "AssignedToRecipientEmail": {
                        "description": "The form field id",
                        "type": "string"
                    },
                    "Fields": {
                        "description": "Fields to assign",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldAssignmentApiModel"
                        }
                    },
                    "Signatures": {
                        "description": "Fields to assign",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SignatureAssignmentApiModel"
                        }
                    }
                }
            },

            "FieldAssignmentApiModel": {
                "description": "Type which describes field assignment",
                "type": "object",
                "required": ["FieldId"],
                "properties": {
                    "FieldId": {
                        "description": "The form field id",
                        "type": "string"
                    },
                    "IsRequired": {
                        "description": "Flag to determine is the field needs to be marked as required or not",
                        "type": "boolean"
                    }
                }
            },

            "SignatureAssignmentApiModel": {
                "description": "Type which describes field assignment",
                "type": "object",
                "required": ["FieldId", "SignatureType"],
                "properties": {
                    "FieldId": {
                        "description": "The form field id",
                        "type": "string"
                    },
                    "SignatureType": {
                        "description": "The signature type",
                        "type": "object",
                        "$ref": "#/components/schemas/SignatureTypeApi"
                    },
                    "EnableTimestamp" :{
                        "description": "Set to true to enable timestamping",
                        "type": "boolean"
                    },
                    "RemoteSignatureName":{
                        "description": "Name of the remote signature. Only used if SignatureType = RemoteSigningProvider",
                        "type": "number"
                    },
                    "StampSignatureConfiguration" :
                    {
                        "description": "Configuration for stamp signature. Only used if SignatureType = Stamp",
                        "type": "object",
                        "$ref": "#/components/schemas/StampSignatureConfigurationApiModel"
                    }
                }
            },

            "OverwriteFieldValueApiModel": {
                "description": "Type used to set form field's value",
                "type": "object",
                "properties": {
                    "FieldName": {
                        "description": "The name of the PDF form field",
                        "type": "string"
                    },
                    "FieldValue": {
                        "description": "The value to set for PDF form field",
                        "type": "string"
                    }
                }
            },

            "RecipientApiModel": {
                "description": "Model which defines a recipient",
                "type": "object",
                "required": ["Email","Name","Index","RecipientType"],
                "properties": {
                    "Email": {
                        "description": "The recipient email address",
                        "type": "string"
                    },
                    "Name": {
                        "description": "Full name of the recipient",
                        "type": "string"
                    },
                    "Index": {
                        "description": "The index of the recipient. In serial signing mode this represents the position at which he signs the document",
                        "type": "number"
                    },
                    "PersonalMessage": {
                        "description": "A specific personal message just for this recipient",
                        "type": "string"
                    },
                    "RecipientAuthenticationMethods": {
                        "description": "Set authentication types",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientAuthenticationApiModel"
                        }
                    },
                    "RecipientType": {
                        "description": "Specify the recipient type",
                        "type": "object",
                        "$ref": "#/components/schemas/RecipientTypeApi"
                    },
                    "AutomaticSignerProfileIdentifier": {
                        "description": "The automatic signing profile",
                        "type": "string"
                    },
                    "SignNotificationChannel" :{
                        "description": "Notification channel used for this recipient",
                        "type": "object",
                        "$ref": "#/components/schemas/SignNotificationChannelTypeApi"
                    },
                    "SignGroup":{
                        "description": "The name of the sign group this recipient is a part of",
                        "type": "string"
                    },
                    "Language":{
                        "description": "Overwrites the recipient language set at the envelope level",
                        "type": "string"
                    },
                    "RemoteSignatureConfiguration" :{
                        "description": "Configuration for remote signatures",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteSignatureConfigurationApiModel"
                        }
                    },
                    "PhoneNumber":{
                        "description": "Sets the recipient phone number",
                        "type": "string"
                    }
                }
            },

            "FileAccessApiModel": {
                "description": "Custom file access type which specified to which recipient is the file assigned",
                "type": "object",
                "required": ["FileIndex", "RecipientIndex"],
                "properties": {
                    "FileIndex": {
                        "description": "Index of the file",
                        "type": "number"
                    },
                    "RecipientIndex": {
                        "description": "Index of the recipient",
                        "type": "number"
                    }
                }
            },


            "GetUserAutomaticSigningProfilesResult" :{
                "description": "GetUserAutomaticSigningProfiles result",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AutomaticSigningProfileResultApiModel"
                        }
                    }
                }
            },

            "GetOrganizationAutomaticSigningProfilesResult" :{
                "description": "GetOrganizationAutomaticSigningProfiles result",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetOrganizationAutomaticSigningProfilesResult"
                        }
                    }
                }
            },

            "AutomaticSigningProfileResultApiModel": {
                "description": "Specifies the return type for a automatic signing profile",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "The name of the profile",
                        "type": "string"
                    },
                    "Identifier": {
                        "description": "The automatic signing profile identifier",
                        "type": "string"
                    }
                }
            },

            "AutomaticSigningProfileApiModel": {
                "description": "Type which specifies a profile to be used for automatic signature",
                "type": "object",
                "required": ["Name","CertificateTypeApi"],
                "properties": {
                    "Name": {
                        "description": "The name of the profile",
                        "type": "string"
                    },
                    "SignatureImageBase64": {
                        "description": "The signature image in base64 format. Leave empty to use the default image",
                        "type": "string"
                    },
                    "SignatureImprintName": {
                        "description": "The name of the signature imprint, leave empty for no imprint. The organization imprints can be retrieved by calling GetSignaturesImprints",
                        "type": "string"
                    },
                    "CertificateTypeApi": {
                        "description": "The type of certificate to be used ",
                        "type": "object",
                        "$ref": "#/components/schemas/AutomaticSigningProfileCertificateTypeApi"
                    },
                    "StoredCertificate": {
                        "description": "This should be set when CertificateTypeApi = StoredInProfile",
                        "type": "object",
                        "required": false,
                        "$ref": "#/components/schemas/ProfileStoredCertificateApiModel"
                    },
                    "SignatureTypeIdentifierForRemoteSigningProvider": {
                        "description": "The remote signature type identifier. This should be set when CertificateTypeApi = RemoteSigningProvider",
                        "type": "integer"
                    }
                }
            },

            "ProfileStoredCertificateApiModel": {
                "description": "Type which specifies a stored certificate to be used for automatic signature",
                "type": "object",
                "required": ["CertificateBase64"],
                "properties": {
                    "CertificateBase64": {
                        "description": "The certificate specified as a BASE64 encoded string",
                        "type": "string"
                    },
                    "CertificatePassword": {
                        "description": "The certificate password",
                        "type": "string"
                    }
                }
            },

            "ReminderOptionsApiModel": {
                "description": "Reminder options type",
                "type": "object",
                "properties": {
                    "EnableReminders": {
                        "description": "Flag to enable notifications for envelope",
                        "type": "boolean"
                    },
                    "FinalWarningReminderDay": {
                        "description": "The number of days before the envelope expiration when the final expiration warning is sent",
                        "type": "number"
                    },
                    "RecurrentEachDays": {
                        "description": "The number of recurrent days when reminders will be sent.",
                        "type": "number"
                    }
                }
            },

            "RecipientNotificationStatusApi" :{
                "description": "Specifies the recipient notification status",
                "type": "number",
                "enum": [
                    "0",
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                    "numericValue": "1",
                    "identifier": "Enabled"
                }, {
                    "numericValue": "2",
                    "identifier": "Disabled"
                }, {
                    "numericValue": "3",
                    "identifier": "DisabledExceptReceiveCopy"
                }],
                "x-ms-enum": []                
            },


            "SenderNotificationStatusApi" :{
                "description": "Specifies the sender notification status",
                "type": "number",
                "enum": [
                    "0",
                    "1"
                ],
                "x-enum-values": [{
                    "numericValue": "0",
                    "identifier": "Enabled"
                }, {
                    "numericValue": "1",
                    "identifier": "Disabled"
                }],
                "x-ms-enum": []                
            },

            "EmailSenderTypeApi": {
                "description": "Specifies the signer download document action : 1 - User, 2 - Organization, 3 - ApplicationName",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3"
                ],
                "x-enum-values": [{
                    "numericValue": "1",
                    "identifier": "User"
                }, {
                    "numericValue": "2",
                    "identifier": "Organization"
                }, {
                    "numericValue": "3",
                    "identifier": "ApplicationName"
                }],
                "x-ms-enum": []
            },

            "OrganizationDocumentRetentionApiModel": {
                "description": "Type description for organization document expiration model",
                "type": "object",
                "properties": {
                    "EnableDocumentExpiration": {
                        "description": "Determines if the document expiration is enabled or not",
                        "type": "boolean"
                    },
                    "NumberOfDays": {
                        "description": "The number of days after which the envelope will be automatically deleted.The value must be between 3 and 90",
                        "type": "boolean"
                    }
                }
            },

            "OrganizationPoliciesApiModel": {
                "description": "Type description for OrganizationPoliciesApiModel model",
                "type": "object",
                "properties": {
                    "RequireSignerAuthentication": {
                        "description": "This flag determines if signer authentication must be enforce for each new sent envelope",
                        "type": "boolean"
                    },
                    "AllowLockedDocuments":{
                        "description": "This flag determines if locked/un-signable PDF documents are allowed as part of the envelope",
                        "type": "boolean"
                    },
                    "EnableTags":{
                        "description": "This flag determines if tags processing is enabled",
                        "type": "boolean"
                    },
                    "ForceBatchSign" :{
                        "description": "This flag determines if batch signing is automatically enabled for all envelopes",
                        "type": "boolean"
                    },   
                    "DeleteTagText" :{
                        "description": "This flag determines if tags text is deleted after being processed",
                        "type": "boolean"
                    },
                    "MetadataEditorRedirect": {
                        "description": "This flag determines if signer authentication must be enforce for each new sent envelope",
                        "$ref": "#/components/schemas/MetadataEditorRedirectApiModel"
                    }
                }
            },

            "MetadataEditorRedirectApiModel": {
                "description": "Type description for UserInvitation model",
                "type": "object",
                "properties": {
                    "EnableRedirect": {
                        "description": "Flag which determines if the metadata url editor redirect is enabled or not",
                        "type": "boolean"
                    },
                    "Url": {
                        "description": "The url to redirect to",
                        "type": "string"
                    }
                }
            },

            "OrganizationVisualCustomizationApiModel": {
                "description": "Type description for UserInvitation model",
                "type": "object",
                "properties": {
                    "OrganizationLogoBase64": {
                        "description": "The organization logo sent as BASE64 encoded string",
                        "type": "string"
                    },
                    "CSSCustomization": {
                        "description": "CSS customization for WebSign",
                        "type": "string"
                    }
                }
            },

            "OrganizationUpdateSettingsApiModel": {
                "description": "Type description for updating organization settings model. Only set the values that need to be updated",
                "type": "object",
                "properties": {

                    "Settings": {
                        "description": "Set the organization name",
                        "$ref": "#/components/schemas/OrganizationBasicSettingsApiModel"
                    },
                    "DocumentRetention": {
                        "description": "Set the organization name",
                        "$ref": "#/components/schemas/OrganizationDocumentRetentionApiModel"
                    },
                    "Policies": {
                        "description": "Set the organization name",
                        "$ref": "#/components/schemas/OrganizationPoliciesApiModel"
                    },
                    "VisualCustomization": {
                        "description": "Set the organization name",
                        "$ref": "#/components/schemas/OrganizationVisualCustomizationApiModel"
                    },
                    "SignatureSettings": {
                        "description": "Set the organization signing settings",
                        "$ref": "#/components/schemas/OrganizationSigningSettingsApiModel"
                    }
                }
            },

            "OrganizationBasicSettingsApiModel" : {
                "description": "Type description for organization sign settings",
                "type": "object",
                 "properties": {

                    "Name": {
                        "description": "Set the organization name",
                        "type": "string"
                    },
                    "InvitationEmailLanguage": {
                        "description": "Set the default language used in the email sent for inviting new users to your organization. Call GetEmailTemplateLanguages to obtain the list of all supported languages",
                        "type": "string"
                    },
                    "EmailSenderType": {
                        "description": "Set the organization name",
                        "$ref": "#/components/schemas/EmailSenderTypeApi"
                    },

                    "RecipientNotification" :{
                        "description": "Set the notification status for recipients",
                        "$ref": "#/components/schemas/RecipientNotificationStatusApi"
                    },
                    "SenderNotification" :{
                        "description": "Set the notification status for recipients",
                        "$ref": "#/components/schemas/SenderNotificationStatusApi"
                    }
                 }
            },

            "OrganizationSigningSettingsApiModel": {
                "description": "Type description for organization sign settings",
                "type": "object",
                "properties": {
                    "AutomaticFinishAfterSigning": {
                        "description": "Enable/disable the option to automatically finish a SignStep after signing all signature fields",
                        "type": "boolean"
                    },
                    "ForceSignerToReadDocument": {
                        "description": "Enable/disable the option to force the user to read the document before being allowed to sign",
                        "type": "boolean"
                    },
                    "ShowSignerIntroductionDetailsPage": {
                        "description": "Enable/disable the option to show the signer the introduction page with details about previous signers and sender",
                        "type": "boolean"
                    },
                    "SigningConfirmationForProfileAndClickToSign": {
                        "description": "Enable/disable the option to ask for signature confirmation when signing with a profile / Click2Sign signature type",
                        "type": "boolean"
                    },
                    "EnableBrowserGeolocationRequest": {
                        "description": "Enable/disable the option to ask for browser geolocation",
                        "type": "boolean"
                    },
                    "AllowRejectWithoutRejectionText": {
                        "description": "Enable/disable the option to allow signers to reject without entering the rejection reason",
                        "type": "boolean"
                    },
                    "DocumentDownload": {
                        "description": "Enable/disable the option to allow the user to upload his own signature image when using a Draw2Sign signature type",
                        "$ref": "#/components/schemas/SignerDownloadDocumentActionTypeApi"
                    },
                    "DocumentDownloadRedirectUrl": {
                        "description": "Set the redirect url, only if DocumentDownload = RedirectToUrl",
                        "type": "string"
                    },
                    "SendNotificationOnEnvelopeCancel": {
                        "description": "Enable/disable the recipient notification sent when a envelope is canceled",
                        "type": "boolean"
                    },
                    "SendNotificationOnEnvelopeDelete": {
                        "description": "Enable/disable the recipient notification sent when a envelope is deleted",
                        "type": "boolean"
                    },
                    "ApplyImprintForDraw2SignSignatures": {
                        "description": "Enable/disable if the signature imprint is applied when signing with Draw2Sign signatures",
                        "type": "boolean"
                    },
                    "ApplyImprintForProfileSignatures": {
                        "description": "Enable/disable if the signature imprint is applied when signing profile  signature",
                        "type": "boolean"
                    },
                    "EnableLongTermValidation": {
                        "description": "Enable/disable support for LTV signatures",
                        "type": "boolean"
                    }
                }
            },

            "TemplateItemResultApiModel": {
                "description": "Template item type",
                "type": "object",
                "properties": {
                    "IsSharedTemplate": {
                        "description": "Boolean flag to know if the template is shared or not",
                        "type": "boolean"
                    },
                    "Id": {
                        "description": "Id of the template",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the template",
                        "type": "string"
                    },
                    "LastUpdateDateUTC": {
                        "description": "The last update date of the template",
                        "type": "string"
                    },
                    "Files": {
                        "description": "Array of filenames",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },

            "NewStampApiModel" :{
                "description": "Describes adding a new signature stamp",
                "type": "object",
                "required": ["Name","Image"],
                "properties": {
                    "Name": {
                        "description": "Name of the new signature stamp",
                        "type": "string"
                    },
                    "Image":{
                        "description": "The stamp image file. Must be in PNG format",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },

            "FormFieldResultApiModel": {
                "description": "FormFieldResultApiModel type",
                "type": "object",
                "properties": {
                    "Id": {
                        "description": "Form field id",
                        "type": "string"
                    },
                    "PageNumber": {
                        "description": "The page number on which the form field is found",
                        "type": "number"
                    },
                    "FieldType": {
                        "description": "The type of the form field",
                        "type": "object",
                        "$ref": "#/components/schemas/FormFieldTypeApi"
                    }
                }
            },

            "TeamShareApiModel": {
                "description": "Type used to specify team members",
                "type": "object",
                "required": ["Name", "MemberEmails"],
                "properties": {
                    "Name": {
                        "description": "Name of the team",
                        "type": "string"
                    },
                    "MemberEmails": {
                        "description": "Array of organization user emails which will be added to the team",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },

            "TeamHierarchicalApiModel": {
                "description": "Type used to specify team members of a hierarchical team",
                "type": "object",
                "required": ["Name", "Members"],
                "properties": {
                    "Name": {
                        "description": "Name of the team",
                        "type": "string"
                    },
                    "Members": {
                        "description": "Members of the team",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HierarchicalTeamMember"
                        }
                    }
                }
            },

            "HierarchicalTeamMember": {
                "description": "Type used to specify a hierarchical team member",
                "type": "object",
                "properties": {
                    "Email": {
                        "description": "Email address of the team member",
                        "type": "string"
                    },
                    "Index": {
                        "description": "Index of the team members. Members with lower indexes see the envelopes of the other members",
                        "type": "number"
                    }
                }
            },

            "OrganizationSignGroupApiModel" :{
                "description": "Describes a signing group",
                "required": ["Name", "Members"],
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "The name of the sign group",
                        "type": "string"
                    },
                    "Members": {
                        "description": "Members of sign group",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SignGroupMemberApiModel"
                        }
                    }
                }
            },

            "SignGroupMemberApiModel":{
                "description": "Describes a sign group member",
                "required": ["Name", "Email"],
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "Member name",
                        "type": "string"
                    },
                    "Email": {
                        "description": "Member email address",
                        "type": "string"
                    },
                    "PhoneNumber" : {
                        "description": "Member email address",
                        "type": "string"
                    }
                }
            },

            "TemplateDetailsResultApiModel": {
                "description": "Template details type",
                "type": "object",
                "properties": {

                    "TemplateId": {
                        "description": "The template identifier",
                        "type": "string"
                    },
                    "Name": {
                        "description": "Template name",
                        "type": "string"
                    },
                    "ReminderOptions": {
                        "description": "Enable reminders and set specific options",
                        "type": "object",
                        "$ref": "#/components/schemas/ReminderOptionsApiModel"
                    },
                    "Recipients": {
                        "description": "Set the template recipients",
                        "type": "object",
                        "$ref": "#/components/schemas/RecipientApiModel"
                    },
                    "Documents": {
                        "description": "Set the template documents",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentResultApiModel"
                    },
                    "CreationDateUTC": {
                        "description": "Creation date of the template",
                        "type": "string"
                    },
                    "LastUpdateDateUTC": {
                        "description": "The last update date of the template",
                        "type": "string"
                    },
                    "Language": {
                        "description": "Language for email notifications. Leave empty for default",
                        "type": "string"
                    },
                    "SignersShouldReceiveFinishedDocument": {
                        "description": "Flag which determines if signers will receive final signed documents",
                        "type": "boolean"
                    },
                    "Metadata": {
                        "description": "Template metadata",
                        "type": "string"
                    },
                    "CertifyDocumentsBeforeSending": {
                        "description": "Flag which determines if the documents will be certified before sending",
                        "type": "boolean"
                    },
                    "FileAccessMode": {
                        "description": "Set the file access mode",
                        "type": "object",
                        "$ref": "#/components/schemas/FileAccessModeApi"
                    },
                    "PreventFormFieldEditOnEnvelopeCompletion": {
                        "description": "Flag which determines if the document form fields will be disabled on envelope completion",
                        "type": "boolean"
                    },
                    "IsSharedTemplate": {
                        "description": "Boolean flag to know if the template is shared or not",
                        "type": "boolean"
                    },
                    "DocumentTimestampType": {
                        "description": "Set the type of timestamping for serial envelope. To be set only if EnableDocumentTimestamp is enabled and the the of envelope is serial",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentTimestampTypeApi"
                    }
                }
            },

            "DraftDetailsResultApiModel": {
                "description": "Draft details",
                "type": "object",
                "properties": {
                    "DraftId": {
                        "description": "The id of the draft",
                        "type": "string"
                    },
                    "Name": {
                        "description": "Draft name",
                        "type": "string"
                    },
                    "ReminderOptions": {
                        "description": "Enable reminders and set specific options",
                        "type": "object",
                        "$ref": "#/components/schemas/ReminderOptionsApiModel"
                    },
                    "Documents": {
                        "description": "Set the draft documents",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentResultApiModel"
                    },
                    "Recipients": {
                        "description": "Set the draft recipients",
                        "type": "object",
                        "$ref": "#/components/schemas/RecipientApiModel"
                    },
                    "EnvelopeType" : {
                        "description": "The type of the envelope",
                        "$ref": "#/components/schemas/EnvelopeTypeApi"
                    },
                    "CreationDateUTC": {
                        "description": "Creation date of the draft",
                        "type": "string"
                    },
                    "LastUpdateDateUTC": {
                        "description": "The last update date of the draft",
                        "type": "string"
                    },
                    "Language": {
                        "description": "Language for email notifications. Leave empty for default",
                        "type": "string"
                    },
                    "SignersShouldReceiveFinishedDocument": {
                        "description": "Flag which shows if the signers will also received the finished documents",
                        "type": "boolean"
                    },
                    "Metadata": {
                        "description": "Draft metadata",
                        "type": "string"
                    },
                    "CertifyDocumentsBeforeSending": {
                        "description": "Flag which shows if the documents were certified before sending",
                        "type": "boolean"
                    },
                    "PreventFormFieldEditOnEnvelopeCompletion": {
                        "description": "Flag which determines if the document form fields will be disabled on envelope completion",
                        "type": "boolean"
                    },
                    "AllowEditIncognitoMode" :{
                        "description": "Flag which determines if the draft canm be edited in incognito mode",
                        "type": "boolean"
                    },
                    "FileAccessMode": {
                        "description": "Set to true to enable recipient delegation",
                        "type": "object",
                        "$ref": "#/components/schemas/FileAccessModeApi"
                    },
                    "DocumentTimestampType": {
                        "description": "Set the type of timestamping for serial envelope. To be set only if EnableDocumentTimestamp is enabled and the the of envelope is serial",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentTimestampTypeApi"
                    }
                }
            },

            "CompletedAttachmentApiModel":{
                "description": "Completed attachment model",
                "type": "object",
                "properties": {
                    "Id": {
                        "description": "The identifier of the attachment",
                        "type": "string"
                    },
                    "FileName": {
                        "description": "The name of the attachment file",
                        "type": "string"
                    }
                }
            },

            "ContactResultApiModel": {
                "description": "Contact result type",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "The name of the contact",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The email of the contact",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The phone number of the contact",
                        "type": "string"
                    }
                }
            },

            "RecipientAuthenticationApiModel": {
                "description": "Authentication details for recipient",
                "type": "object",
                "required": ["AuthorizationDetails", "AuthenticationType"],
                "properties": {
                    "AuthenticationType": {
                        "description": "Authentication type",
                        "type": "object",
                        "$ref": "#/components/schemas/RecipientTypeApi"
                    },
                    "AuthorizationDetails": {
                        "description": "Set authentication data. For password authentication set the password, for SMS set the phone number",
                        "type": "string"
                    }
                }
            },

            "CallbackApiModel": {
                "description": "CallbackApiModel model definition",
                "type": "object",
                "properties": {
                    "CallbackEnvelopeStatusChangedUrl": {
                        "description": "Callback URL for envelope status",
                        "type": "string"
                    },
                    "CallbackRecipientActionUrl": {
                        "description": "Callback URL for recipient action",
                        "type": "string"
                    },
                    "AuthenticationType": {
                        "description": "Authentication type",
                        "type": "object",
                        "$ref": "#/components/schemas/CallbackAuthenticationTypeApi"
                    },
                    "BasicAuthenticationDetails": {
                        "description": "Data for basic authentication. Only set this if AuthenticationType = Basic",
                        "type": "object",
                        "$ref": "#/components/schemas/CallbackBasicAuthentication"
                    },
                    "CustomHeaderAuthenticationDetails": {
                        "description": "Data for custom header authentication. Only set this if AuthenticationType = CustomHeader",
                        "type": "object",
                        "$ref": "#/components/schemas/CallbackCustomHeaderAuthentication"
                    }
                }
            },

            "CallbackBasicAuthentication": {
                "description": "CallbackBasicAuthentication model definition",
                "type": "object",
                "required": ["UserName", "Password"],
                "properties": {
                    "UserName": {
                        "description": "Username used for authentication",
                        "type": "string"
                    },
                    "Password": {
                        "description": "Password used for authentication",
                        "type": "string"
                    }
                }
            },

            "CallbackCustomHeaderAuthentication": {
                "description": "CallbackCustomHeaderAuthentication model definition",
                "type": "object",
                "required": ["HeaderName", "HeaderValue"],
                "properties": {
                    "HeaderName": {
                        "description": "Header name used for authentication",
                        "type": "string"
                    },
                    "HeaderValue": {
                        "description": "Header value used for authentication",
                        "type": "string"
                    }
                }
            },
            "EmailTemplateApiModel" :{
                "description": "Definition for creating a new organization",
                "type": "object",
                "required": ["Language"],
                "properties": {
                    "Language": {
                        "description": "The language for which the new email template will be created",
                        "type": "string"
                    },
                    "Templates" :{
                        "description": "The templates",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailTemplateDescriptorApiModel"
                        }
                    }
                }
            },

            "EmailTemplateDescriptorApiModel" :{
                "description": "",
                "type": "object",
                "required": ["Subject","Body"],
                "properties": {
 
                    "Subject": {
                        "description": "The subject of the email template",
                        "type": "string"
                    },
                    "Body": {
                        "description": "The body of the email template",
                        "type": "string"
                    },
                    "TemplateType" :{
                        "description" : "The email template type",
                        "type" :"object",
                        "$ref" : "#/components/schemas/EmailTemplateTypeApi"                        
                    }
                }
            },

            "RemoteSignatureConfigurationApiModel":{
                "description": "",
                "type": "object",
                "required": ["RemoteSignatureName","Configuration"],
                "properties": {
 
                    "RemoteSignatureName": {
                        "description": "The name of the remote signature type",
                        "type": "string"
                    },
                    "Configuration": {
                        "description": "Dictionary with sigganture specific configuration",
                        "type": "object",
                        "additionalProperties" :{
                            "type":"string"
                        }
                    }
                }
            },

            "CreateOrganizationApiModel" :{
                "description": "Definition for creating a new organization",
                "type": "object",
                "required": ["OrganizationName","AdministratorFirstName", "AdministratorLastName", "AdministratorEmail", "AdministratorPassword"],
                "properties": {
                    "OrganizationName": {
                        "description": "The name of the new organization",
                        "type": "string"
                    },
                    "AdministratorFirstName" :{
                        "description": "The first name of the org administrator",
                        "type": "string"
                    },
                    "AdministratorLastName" :{
                        "description": "The last name of the org administrator",
                        "type": "string"
                    },
                    "AdministratorEmail" :{
                        "description": "The email address of the org administrator",
                        "type": "string"
                    },
                    "AdministratorPassword" :{
                        "description": "The password of the org administrator. Must be changed on first login",
                        "type": "string"
                    }
                }
            },

            "SignSettingsApiModel": {
                "description": "SignSettingsApiModel definition",
                "type": "object",
                "required": ["SigningConfirmationForProfileAndClickToSign", "AutomaticFinishAfterSigning", "ForceSignerToReadDocument","ShowSignerIntroductionDetailsPage","EnableBrowserGeolocationRequest","AllowSignerToUploadImageForDrawToSign","AllowRejectWithoutRejectionText"],
                "properties": {
                    "SigningConfirmationForProfileAndClickToSign": {
                        "description": "Flag which determines if the signer has to confirm when signing a ClickToSign / profile  signature",
                        "type": "boolean"
                    },
                    "AutomaticFinishAfterSigning": {
                        "description": "Flag which determines if the signing process is finished automatically after the last signature field is signed",
                        "type": "boolean"
                    },
                    "ForceSignerToReadDocument": {
                        "description": "Flag which determines if the signer must read the document first before being allowed to sign it",
                        "type": "boolean"
                    },
                    "ShowSignerIntroductionDetailsPage": {
                        "description": "Flag which determines if the signer is shown a introduction page with details about the document sender",
                        "type": "boolean"
                    },
                    "EnableBrowserGeolocationRequest": {
                        "description": "Flag which determines if the browser geo-location request is enabled",
                        "type": "boolean"
                    },
                    "AllowSignerToUploadImageForDrawToSign": {
                        "description": "Flag which determines if the user is allowed to upload signature image when signing a DrawToSign signature field",
                        "type": "boolean"
                    },
                    "DocumentDownload": {
                        "description": "Set the document download option",
                        "type": "object",
                        "$ref": "#/components/schemas/SignerDownloadDocumentActionTypeApi",
                        "required": true
                    },
                    "DocumentDownloadRedirectUrl": {
                        "description": "Set the redirect URL. This should be set only when DocumentDownload = RedirectToUrl",
                        "type": "string"
                    },
                    "AllowRejectWithoutRejectionText": {
                        "description": "Flag which determines if the user is allowed to reject signing without entering the reason",
                        "type": "boolean"
                    },
                    "ShowPhoneNumber":{
                        "description": "Flag which determines if the recipient phone number is shown when sending OTP by SMS",
                        "type": "boolean"
                    }
                }
            },

            "EmailTemplateTypeApi" : {
                "description": "Specifies the email templates type",
                "type": "number",
                "enum": [
                    "0",
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                    "numericValue": "0",
                    "identifier": "Main"
                }, {
                    "numericValue": "1",
                    "identifier": "Sign"
                }, {
                    "numericValue": "3",
                    "identifier": "EnvelopeExpiredSender"
                }],
                "x-ms-enum": []

            },

            "SignNotificationChannelTypeApi":{
                "description": "Specifies the sign notification type",
                "type": "number",
                "enum": [
                    "0",
                    "1"
                ],
                "x-enum-values": [{
                    "numericValue": "0",
                    "identifier": "Email"
                }, {
                    "numericValue": "1",
                    "identifier": "SMS"
                }],
                "x-ms-enum": []
            },

            "ResetSignatureType":{
                "description": "Specifies the type of signature to be set",
                "type": "number",
                "enum": [
                    "0",
                    "1",
                    "3"
                ],
                "x-enum-values": [{
                    "numericValue": "0",
                    "identifier": "DrawTypeToSign"
                }, {
                    "numericValue": "1",
                    "identifier": "ClickToSign"
                }, {
                    "numericValue": "3",
                    "identifier": "LocalCertificate"
                }],
                "x-ms-enum": []
            },



            "CallbackAuthenticationTypeApi": {
                "description": "Specifies the callback authentication : 0 - None, 1 - Basic, 2 - CustomHeader",
                "type": "number",
                "enum": [
                    "0",
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                    "numericValue": "0",
                    "identifier": "None"
                }, {
                    "numericValue": "1",
                    "identifier": "Basic"
                }, {
                    "numericValue": "2",
                    "identifier": "CustomHeader"
                }],
                "x-ms-enum": []
            },

            "SignerDownloadDocumentActionTypeApi": {
                "description": "Specifies the signer download document action : 1 - Allow, 2 - Prevent, 3 - RedirectToUrl",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3"
                ],
                "x-enum-values": [{
                    "numericValue": "1",
                    "identifier": "Allow"
                }, {
                    "numericValue": "2",
                    "identifier": "Prevent"
                }, {
                    "numericValue": "3",
                    "identifier": "RedirectToUrl"
                }],
                "x-ms-enum": []
            },
            
            "EnvelopeTypeApi":{
           	  "description": "Specifies the type of envelope : 0 - Serial, 1 - Concurrent, 2 - Bulk",
                "type": "number",
                "enum": [
                    "0",
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                    "numericValue": "0",
                    "identifier": "Serial"
                }, {
                    "numericValue": "1",
                    "identifier": "Concurrent"
                }, {
                    "numericValue": "2",
                    "identifier": "Bulk"
                }],
                "x-ms-enum": []
            },

            "FormFieldTypeApi": {
                "description": "Specifies the type of form field : TextBox = 1, RadioButton = 2, CheckBox = 3, ComboxBox = 4, ListBox = 5, Signature = 6, Attachment = 7",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7"
                ],
                "x-enum-values": [{
                    "numericValue": "1",
                    "identifier": "TextBox"
                }, {
                    "numericValue": "2",
                    "identifier": "RadioButton"
                }, {
                    "numericValue": "3",
                    "identifier": "CheckBox"
                }, {
                    "numericValue": "4",
                    "identifier": "ComboxBox"
                }, {
                    "numericValue": "5",
                    "identifier": "ListBox"
                }, {
                    "numericValue": "6",
                    "identifier": "Signature"
                }, {
                    "numericValue": "6",
                    "identifier": "Attachment"
                }],
                "x-ms-enum": []
            },

            "FileAccessModeApi": {
                "description": "Specifies the file type access : AllFiles = 1, Custom = 2",
                "type": "number",
                "enum": [
                    "1",
                    "2"
                ],
                "x-enum-values": [{
                    "numericValue": "1",
                    "identifier": "AllFiles"
                }, {
                    "numericValue": "2",
                    "identifier": "Custom"
                }]
            },

            "AnnotationTypeApi": {
                "description": "Specifies the type of annotation : SenderName = 1, SenderEmail = 2, OrganizationName = 3,Custom = 4",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "x-enum-values": [{
                    "numericValue": "1",
                    "identifier": "SenderName"
                }, {
                    "numericValue": "2",
                    "identifier": "SenderEmail"
                }, {
                    "numericValue": "3",
                    "identifier": "OrganizationName"
                }, {
                    "numericValue": "4",
                    "identifier": "Custom"
                }]
            },

            "RecipientTypeApi": {
                "description": "Specifies the recipient type : Signer = 1, ReceivesCopy = 2, AutomaticSigner=3, Approver=4",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "x-enum-values": [{
                    "numericValue": "1",
                    "identifier": "Signer"
                }, {
                    "numericValue": "2",
                    "identifier": "ReceivesCopy"
                },
                {
                    "numericValue": "3",
                    "identifier": "AutomaticSigner"
                },
                {
                    "numericValue": "4",
                    "identifier": "Approver"
                }],
                "x-enum-varnames": [
                    "Signer",
                    "ReceivesCopy",
                    "AutomaticSigner",
                    "Approver"
                ],
                "x-enum-descriptions": [
                    "Signer",
                    "ReceivesCopy",
                    "AutomaticSigner",
                    "Approver"
                ]
            },

            "RecipientAuthenticationTypeApi": {
                "description": "Specifies the recipient authentication type : Password = 1 , SMS = 2, AuthenticationProvider=3, BulksignIdentity=4, ActiveDirectory=5 ",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                ],
                "x-enum-values": [{
                    "numericValue": "1",
                    "identifier": "Password"
                }, {
                    "numericValue": "2",
                    "identifier": "SMS"
                },{
                    "numericValue": "3",
                    "identifier": "AuthenticationProvider"
                },{
                    "numericValue": "4",
                    "identifier": "BulksignIdentity"
                },{
                    "numericValue": "5",
                    "identifier": "ActiveDirectory"
                }]
            },

            "StampSignatureTypeApi":{
                "description": "Specifies the stamp signature type : UserProvided = 0 , PredefinedStamp = 1",
                "type": "number",
                "enum": [
                    "0",
                    "1"
                ],
                "x-enum-values": [{
                    "numericValue": "0",
                    "identifier": "UserProvided"
                }, {
                    "numericValue": "1",
                    "identifier": "PredefinedStamp"
                }]
            },

            "EnvelopeStatusTypeApi": {
                "description": "Specifies the envelope status : InProgress = 3 , Completed = 4, Canceled = 5, Expired = 6, Deleted = 7",
                "type": "number",
                "enum": [
                    "3",
                    "4",
                    "5",
                    "6",
                    "7"
                ],
                "x-enum-values": [{
                    "numericValue": "3",
                    "identifier": "InProgress"
                }, {
                    "numericValue": "4",
                    "identifier": "Completed"
                }, {
                    "numericValue": "5",
                    "identifier": "Canceled"
                }, {
                    "numericValue": "6",
                    "identifier": "Expired"
                },{
                    "numericValue": "7",
                    "identifier": "Deleted"
                }],
                "x-enum-varnames": [
                    "InProgress",
                    "Completed",
                    "Canceled",
                    "Expired",
                    "Deleted"
                ],
                "x-enum-descriptions": [
                    "InProgress",
                    "Completed",
                    "Canceled",
                    "Expired",
                    "Deleted"
                ]
            },

            "SignatureTypeApi": {
                "description": "Specifies the signature type : DrawTypeToSign = 0 , ClickToSign = 1, OTPSign = 2, LocalCertificate = 3, RemoteSignatureProvider = 4, Stamp = 5",
                "type": "number",
                "enum": [
                    "0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"                    
                ],

                "x-enum-values": [{
                    "numericValue": "0",
                    "identifier": "DrawTypeToSign"
                }, {
                    "numericValue": "1",
                    "identifier": "ClickToSign"
                }, {
                    "numericValue": "2",
                    "identifier": "OTPSign"
                },{
                    "numericValue": "3",
                    "identifier": "LocalCertificate"
                },{
                    "numericValue": "4",
                    "identifier": "RemoteSignatureProvider"
                },{
                    "numericValue": "5",
                    "identifier": "Stamp"
                }
                ]
            },

            "AutomaticSigningProfileCertificateTypeApi": {
                "description": "Specifies the certificate type : Default = 1 , StoredInProfile = 1",
                "type": "number",
                "enum": [
                    "1",
                    "2"
                ],

                "x-enum-values": [{
                    "numericValue": "1",
                    "identifier": "Default"
                }, {
                    "numericValue": "2",
                    "identifier": "StoredInProfile"
                }]
            },

            "FindRecipientByEmailApiModel": {
                "description": "Input for finding a recipient by email",
                "type": "object",
                "required": ["RecipientEmail","RecipientType"],
                "properties": {
                    "RecipientEmail": {
                        "description": "The email of the recipient",
                        "type": "string"
                    },
                    "RecipientType": {
                        "description": "Specify the recipient type",
                        "type": "object",
                        "$ref": "#/components/schemas/RecipientTypeApi",
                        "required": "true"
                    }
                }
            },

            "FindRecipientByIndexApiModel": {
                "description": "Input for finding a recipient by index",
                "type": "object",
                "required": ["Index"],
                "properties": {
                    "Index": {
                        "description": "The index of the recipient",
                        "type": "number"
                    }
                }
            },

            "FindRecipientByIdentifierApiModel": {
                "description": "Input for finding a recipient by identifier",
                "type": "object",
                "required": ["Identifier"],
                "properties": {
                    "Index": {
                        "description": "The identifier of the recipient",
                        "type": "string"
                    }
                }
            },


            "DisclosureAgreementApiModel": {
                "description": "DisclosureAgreement model",
                "type": "object",
                "required": ["SignatureDisclosure", "ForceDisclosureAgreementDownload"],
                "properties": {
                    "DisclosureTexts": {
                        "description": "The signature disclosure texts in multiple languages",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DisclosureAgreementTextApiModel"
                        }
                    },
                    "ForceDisclosureAgreementDownload": {
                        "description": "Flag which determines if the user must download the disclosure agreement PDF to continue",
                        "type": "boolean"
                    }
                }
            },


            "DisclosureAgreementTextApiModel" :{
                "description": "Model which allows setting disclosure agreement in a specific language",
                "type": "object",
                "required": ["Text", "ForceDisclosureAgreementDownload"],
                "properties": {
                    "LanguageCode": {
                        "description": "The language code for this specific agreement",
                        "type": "string"
                    },
                    "Text": {
                        "description": "The disclosure agreement text. Html is allowed",
                        "type": "string"
                    }
                }
            },


            "RecipientStatusApi": {
                "description": "Specifies the recipient status : NotSigned = 0 , Opened = 1, Signed = 2, Rejected = 3",
                "type": "number",
                "enum": [
                    "0",
                    "1",
                    "2",
                    "3"
                ]
            },

            "UserRoleApiType" :{
                "description": "Specifies the user role : User = 0 , Administrator = -1, Custom = 2",
                "type": "number",
                "enum": [
                    "0",
                    "-1",
                    "2"
                ]
            },

            "FillFormInputApiModel": {
                "description": "Input for GetFinishedFormFields",
                "type": "object",
                "properties": {
                    "EnvelopeId": {
                        "description": "The id of the envelope",
                        "type": "string"
                    },
                    "RecipientEmail": {
                        "description": "The email of the recipient",
                        "type": "string"
                    }
                }
            },

            "NewContactApiModel": {
                "description": "Model for adding a new contact",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "The name of the contact",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The email of the contact",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The phone number of the contact",
                        "type": "string"
                    },
                    "Address": {
                        "description": "The address of the contact",
                        "type": "string"
                    },
                    "Company": {
                        "description": "The name of the contact's company",
                        "type": "string"
                    }
                }
            },

            "DeleteEnvelopeRecipientApiModel": {
                "type": "object",
                "properties": {
                    "EnvelopeId": {
                        "description": "The id of the envelope to which the recipient belongs",
                        "type": "string"
                    },
                    "ByIndex": {
                        "description": "The index of the recipient which will be deleted",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/FindRecipientByIndexApiModel"
                    },
                    "ByEmail": {
                        "description": "The email of the recipient which will be deleted",
                        "type": "object",
                        "required": "false",
                        "$ref": "#/components/schemas/FindRecipientByEmailApiModel"
                    }
                }
            },

            "LicenseResultApiModel": {
                "type": "object",
                "properties": {
                    "ExpirationDateUTC": {
                        "description": "The license expiration date (UTC timestamp)",
                        "type": "string"
                    },
                    "EnvelopesTotal": {
                        "description": "Total number of envelopes allowed to be sent for signing",
                        "type": "integer"
                    },
                    "EnvelopesUsed": {
                        "description": "Total numbers of envelopes used until now",
                        "type": "integer"
                    },
                    "UsersTotal": {
                        "description": "Total numbers of allowed users to be added to organization",
                        "type": "integer"
                    },
                    "UsersUsed": {
                        "description": "Total numbers of users added to organization",
                        "type": "integer"
                    }

                }
            },

            "OrganizationUserApiModel": {
                "type": "object",
                "properties": {
                    "FullName": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "Email": {
                        "description": "Email address of the user",
                        "type": "string"
                    },
                    "Role": {
                        "description": "Set the user role",
                        "$ref": "#/components/schemas/UserRoleApiType"
                    },
                    "CustomRoleName" :{
                        "description": "If Role = Custom, set the name of the custom user role. Case insensitive",
                        "type": "string"
                    }
                }
            },

            "TemplateReplaceRecipientApiModel": {
                "type": "object",
                "required": ["Name","Email"],
                "properties": {
                    "ByIndex": {
                        "description": "Specify the index of the recipient",
                        "type": "object",
                        "$ref": "#/components/schemas/FindRecipientByIndexApiModel"
                    },
                    "ByEmail": {
                        "description": "Specify the email of the recipient",
                        "type": "object",
                        "$ref": "#/components/schemas/FindRecipientByEmailApiModel"
                    },
                    "ByIdentifier": {
                        "description": "Specify the identifier of the recipient",
                        "type": "object",
                        "$ref": "#/components/schemas/FindRecipientByIdentifierApiModel"
                    },
                    "Email": {
                        "description": "The new recipient email",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The new recipient name",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The recipient phone number",
                        "type": "string"
                    },
                    "PersonalMessage": {
                        "description": "The new recipient personal message",
                        "type": "string"
                    },
                    "Language":{
                        "description": "The recipient language",
                        "type": "string"
                    },
                    "RecipientAuthenticationMethods": {
                        "description": "Set authentication types",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientAuthenticationApiModel"
                        }
                    }
                }
            },

            "ReplaceEnvelopeRecipientApiModel": {
                "type": "object",
                "required": ["Name","Email"],
                "properties": {
                    "EnvelopeId": {
                        "description": "The id of the envelope",
                        "type": "string"
                    },

                    "AutomaticSignerProfileIdentifier": {
                        "description": "Identifier for automatic profile",
                        "type": "string"
                    },

                    "ByIndex": {
                        "description": "Specify the index of the recipient",
                        "type": "object",
                        "$ref": "#/components/schemas/FindRecipientByIndexApiModel"
                    },
                    "ByEmail": {
                        "description": "Specify the email of the recipient",
                        "type": "object",
                        "$ref": "#/components/schemas/FindRecipientByEmailApiModel"
                    },
                    "ByIdentifier": {
                        "description": "Specify the identifier of the recipient",
                        "type": "object",
                        "$ref": "#/components/schemas/FindRecipientByIdentifierApiModel"
                    },
                    "Email": {
                        "description": "The new recipient email",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The new recipient name",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The recipient phone number",
                        "type": "string"
                    },
                    "PersonalMessage": {
                        "description": "The new recipient personal message",
                        "type": "string"
                    },
                    "Language":{
                        "description": "The recipient language",
                        "type": "string"
                    },
                    "RecipientAuthenticationMethods": {
                        "description": "Set authentication types",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientAuthenticationApiModel"
                        }
                    }

                }
            },

            "RecipientFormFillApiModel": {
                "properties": {
                    "RecipientEmail": {
                        "description": "The email address of the recipient",
                        "type": "string"
                    },
                    "Items": {
                        "description": "Form fill data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormFillResultApiModel"
                        }

                    }
                }
            },

            "FormFillResultApiModel": {
                "type": "object",

                "properties": {
                    "FormFieldId": {
                        "description": "The id of the form field",
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value of the form field",
                        "type": "string"
                    },
                    "FileName": {
                        "description": "The name of the file to which the form field belongs to",
                        "type": "string"
                    },
                    "FieldType": {
                        "description": "The type of form field",
                        "type": "string",
                        "$ref": "#/components/schemas/FormFieldTypeApi"
                    },
                    "SignatureType": {
                        "description": "If the form field is a signature, this will contain the signature type",
                        "type": "object",
                        "$ref": "#/components/schemas/SignatureTypeApi"
                    }
                }
            },

            "DocumentParseOptionApiModel" : {
                "type": "object",
                "properties": {
                    "ParseTags": {
                        "description": "Boolean flag which determines if the document is searched for tags",
                        "type": "boolean"
                    },
                    "DeleteTagText" :{
                        "description": "Boolean flag which indicates if tag's text will be deleted from docuemnt after the form fields are created",
                        "type": "boolean"
                    }
                }
            },

            "PrepareEnvelopeApiModel" :{
                "type": "object",
                "properties": {
                    "Files": {
                        "description": "The files which will be part of the envelope",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileInput"
                        }
                    },
                    "FilesBase64": {
                        "description": "The files which will be part of the envelope (base64 format)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileInputBase64"
                        }
                    },
                    "DocumentParsingOptions" :{
                        "description": "Document parsing options",
                        "type": "object",
                        "$ref": "#/components/schemas/DocumentParseOptionApiModel"
                    }
                }
            },

            "FileInput": {
                "type": "object",
                "properties": {
                    "Filename": {
                        "description": "The name of the file",
                        "type": "string"
                    },
                    "FileContent": {
                        "description": "The content of the file",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },

            "FileInputBase64": {
                "type": "object",
                "properties": {
                    "Filename": {
                        "description": "The name of the file",
                        "type": "string"
                    },
                    "FileContentBase64": {
                        "description": "The content of the file as base64 encoded string",
                        "type": "string"
                    }
                }
            },
            "GetUserDetailsResult" :{
                "description": "GetUserDetails result",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserDetailsApModel"
                        }
                    }
                }
            },
            "UserDetailsApModel" : {
                "properties": {
                    "FirstName": {
                        "description": "The first name of the user",
                        "type": "string"
                    },
                    "LastName" : {
                        "description": "The last name of the user",
                        "type": "string"
                    },
                    "Picture" :{
                        "description": "The user's picture as base64 encoded string",
                        "type": "string"
                    },
                    "UILanguage" : {
                        "description": "The user's UI language",
                        "type": "string"
                    },
                    "DateTimeFormat" : {
                        "description": "The user's DateTime format",
                        "type": "string"
                    },
                    "TimezoneIdentifier" :{
                        "description": "The user's time zone format",
                        "type": "string"
                    },
                    "DefaultDraftLanguage" :{
                        "description": "The default language which should be used for drafts",
                        "type": "string"
                    }
                }
            },

            "GetCompletedFormFieldsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecipientFormFillApiModel"
                        }
                    }
                }
            },

            
            "GetContactsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactResultApiModel"
                        }
                    }
                }
            },

            "DownloadEnvelopeCompletedDocumentsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },

            "DownloadEnvelopeCompletedAttachmentsResult":{
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },

            "DownloadEnvelopeIncompleteDocumentsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },

            "GetTemplateDetailsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the api call",
                        "type": "object",
                        "$ref": "#/components/schemas/TemplateDetailsResultApiModel"
                    }
                }
            },

            "GetDraftDetailsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the api call",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DraftDetailsResultApiModel"
                        }
                    }
                }
            },

            "SendEnvelopeResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the api call",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SendEnvelopeResultApiModel"
                        }
                    }
                }
            },

            "GetTemplatesResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateItemResultApiModel"
                        }
                    }
                }
            },

            "GetEnvelopesToSignResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnvelopeToSignResultApiModel"
                        }
                    }
                }
            },

            "GetItemsArrayResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemResultApiModel"
                        }
                    }
                }
            },

            "GetDraftItemsArrayResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DraftItemResultApiModel"
                        }
                    }
                }
            },

            "GetEnvelopeDetailsResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "object",
                        "$ref": "#/components/schemas/EnvelopeDetailsResultApiModel"
                    }
                }
            },

            "GetLicenseResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "object",
                        "$ref": "#/components/schemas/LicenseResultApiModel"
                    }
                }
            },

            "GetOrganizationUsersResult": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationUserApiModel"
                        }
                    }
                }
            },


            "AuditTrailTypeApi" : {
                "description": "Specifies the types for audit trail entries",
                "type": "number",
                "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "10",
                    "11",
                    "12",
                    "13",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "27",
                    "28",
                    "29",
                    "30",
                    "31",
                    "32",
                    "33",
                    "34",
                    "35",
                    "36",
                    "37",
                    "38",
                    "39",
                    "40",
                    "41",
                    "45",
                    "46",
                    "47",
                    "2000",
                    "2001",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ],
                "x-enum-values": [{
                    "numericValue": "1",
                    "identifier": "SignPageLoaded"
                }, {
                    "numericValue": "2",
                    "identifier": "SignatureDisclosureApproved"
                }, {
                    "numericValue": "3",
                    "identifier": "SignatureDisclosureRejected"
                },
                {
                    "numericValue": "4",
                    "identifier": "AuthenticationSucceeded"
                },
                {
                    "numericValue": "5",
                    "identifier": "AuthenticationFailed"
                },
                {
                    "numericValue": "6",
                    "identifier": "SignedManually"
                },
                {
                    "numericValue": "7",
                    "identifier": "Finished"
                },
                {
                    "numericValue": "8",
                    "identifier": "BatchSigned"
                },
                {
                    "numericValue": "10",
                    "identifier": "GeoLocation"
                },
                {
                    "numericValue": "11",
                    "identifier": "RedirectedWithAccessCode"
                },
                {
                    "numericValue": "12",
                    "identifier": "FormFieldValueUpdate"
                },
                {
                    "numericValue": "13",
                    "identifier": "NavigatedToSignatureField"
                },
                {
                    "numericValue": "16",
                    "identifier": "FinishedWithRejection"
                },
                {
                    "numericValue": "17",
                    "identifier": "SMSSentForAuthentication"
                },
                {
                    "numericValue": "18",
                    "identifier": "AddFileAttachment"
                },
                {
                    "numericValue": "19",
                    "identifier": "Custom"
                },
                {
                    "numericValue": "20",
                    "identifier": "DeleteRecipient"
                },
                {
                    "numericValue": "21",
                    "identifier": "ReadPageLoaded"
                },
                {
                    "numericValue": "22",
                    "identifier": "ReadDocumentsConfirmation"
                },
                {
                    "numericValue": "23",
                    "identifier": "Delegated"
                },
                {
                    "numericValue": "24",
                    "identifier": "SenderConfirmedDelegation"
                },
                {
                    "numericValue": "25",
                    "identifier": "IntroductionConfirmation"
                },
                {
                    "numericValue": "27",
                    "identifier": "StartedSigningSession"
                },
                {
                    "numericValue": "28",
                    "identifier": "DocumentImagesLoaded"
                },
                {
                    "numericValue": "29",
                    "identifier": "RecipientReplaced"
                },
                {
                    "numericValue": "30",
                    "identifier": "SMSSentForSignature"
                },
                {
                    "numericValue": "31",
                    "identifier": "OTPSignatureAuthenticationSuccess"
                },
                {
                    "numericValue": "32",
                    "identifier": "OTPSignatureAuthenticationFailed"
                },
                {
                    "numericValue": "33",
                    "identifier": "SignedAutomatically"
                },
                {
                    "numericValue": "34",
                    "identifier": "OTPBatchSignatureAuthenticationSuccess"
                },  {
                    "numericValue": "35",
                    "identifier": "OTPBatchSignatureAuthenticationFailed"
                },  {
                    "numericValue": "36",
                    "identifier": "ExpiredEnvelopeWasRestarted"
                },  {
                    "numericValue": "37",
                    "identifier": "SignatureDisclosurePdfDownload"
                },  {
                    "numericValue": "38",
                    "identifier": "ResetSignatureType"
                },  {
                    "numericValue": "39",
                    "identifier": "ReplacedBouncedEmail"
                },  {
                    "numericValue": "40",
                    "identifier": "DisposableAcceptedIssuerAgreement"
                },  {
                    "numericValue": "41",
                    "identifier": "DisposableSentOtp"
                },  {
                    "numericValue": "45",
                    "identifier": "EnvelopeSenderConfirmSignerIdentity"
                },  {
                    "numericValue": "46",
                    "identifier": "EnvelopeSenderRejectedSignerIdentity"
                },  {
                    "numericValue": "47",
                    "identifier": "IdentitySubmitted"
                },
                {
                    "numericValue": "2000",
                    "identifier": "NotificationSignEmail"
                },
                {
                    "numericValue": "2000",
                    "identifier": "NotificationSignEmail"
                },
                {
                    "numericValue": "2001",
                    "identifier": "NotificationSignSMS"
                },               
                {
                    "numericValue": "2010",
                    "identifier": "NotificationEnvelopeCanceled"
                },
                {
                    "numericValue": "2011",
                    "identifier": "NotificationDeliveredReceiveCopy"
                },
                {
                    "numericValue": "2012",
                    "identifier": "NotificationDeliveredReceiveCopy"
                },
                {
                    "numericValue": "2013",
                    "identifier": "NotificationApproveEmail"
                },
                {
                    "numericValue": "2014",
                    "identifier": "NotificationUnlockedManual"
                },
                {
                    "numericValue": "2015",
                    "identifier": "NotificationUnlockedAutomatic"
                },
                {
                    "numericValue": "2016",
                    "identifier": "NotificationIdentityAccepted"
                },
                {
                    "numericValue": "2017",
                    "identifier": "NotificationIdentityRejected"
                }
            ],
                "x-ms-enum": []
            },

            "AuditTrailEntryApiModel" :{
                "description": "The descriptor type for audit trail entry",
                "type": "object",
                "properties": {
                    "Value": {
                        "description": "The value of the audit trail entry. Can be either JSON document or string",
                        "type": "string"
                    },
                    "EntryDateUTC": {
                        "description": "UTC timestamp of the audit trail entry",
                        "type": "string"
                    },

                    "AuditTrailType" :{
                        "description": "UTC timestamp of the audit trail entry",
                        "type": "string"
                    },
                    "RecipientIdentifier" :{
                        "description" : "The internal identifier of the recipient who performed this action. This will be null for envelope specific actions",
                        "type":"string"
                    },
                    "RequestInformation": {
                        "description": "The request information",
                        "type": "object",
                        "items": {
                            "$ref": "#/components/schemas/RequestInformationApiModel"
                        }
                    }
                }
            },


            "RequestInformationApiModel" :{
                "description": "The descriptor type for request information",
                "type": "object",
                "properties": {
                    "UserAgent": {
                        "description": "The user agent of the request",
                        "type": "string"
                    },
                    "IP": {
                        "description": "The IP address of the request",
                        "type": "string"
                    }
                }
            },

            "ApiResultId": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The id of newly created entity",
                        "type": "string"
                    }
                }
            },

            "ApiResultNumeric": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API call",
                        "type": "number"
                    }
                }
            },

            "ApiResultStringArray": {
                "description": "The result type",
                "type": "object",
                "allOf": [{
                    "$ref": "#/components/schemas/ApiResult",
                    "type": "object"
                }],
                "properties": {
                    "Result": {
                        "description": "The result of the API call",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },

            "ApiResult": {
                "description": "The result type",
                "type": "object",
                "properties": {
                    "ErrorMessage": {
                        "description": "Error message when the API call fails. Will be empty when successful",
                        "type": "string"
                    },
                    "IsSuccess": {
                        "description": "Boolean flag which indicates if the API call was successful or not",
                        "type": "boolean"
                    },
                    "ErrorCode": {
                        "description": "The code of the error",
                        "type": "number"
                    },
                    "RequestId": {
                        "description": "The id of the request. In case of failed requests, send it to us for troubleshooting. Will be empty for successful requests",
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "name": "X-Bulksign-Authentication",
                "in": "header",
                "description": "Sample value : 32GE2GGJ329HOPZXC232322543263724;test@test.com"
            }
        }
    }
}
